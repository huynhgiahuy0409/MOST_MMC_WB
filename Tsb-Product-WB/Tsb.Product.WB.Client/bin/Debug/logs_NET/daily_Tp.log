2025-02-28 14:43:39,427 [Module.exe] INFO  - [FT.Win] The main application is Initialized. (Version 1.0.0.0)
2025-02-28 14:43:41,717 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryExpirationPolicy] Prepared SQL: [SELECT /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryExpirationPolicy*/     EXPIRE_LOGIN,     EXPIRE_TERM,     EXPIRE_RETRY,     7 as WARN_TERM     FROM  TB_TMNL_CFG]
2025-02-28 14:43:41,729 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo] Prepared SQL: [SELECT  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo*/     USER_ID as STAFF_CD,     '' as USE_APP,     '' as DEPT_CD,     GRD_CD as USER_GROUP,     TMNL_CODE as TMNL_ID,     PASSWORD as PASSWORD,     ENG_NM as ENG_NM ,     PWD_DATE as PWDCHANGE_TIME,     SYSDATETIME() AS TODAY,     PWD_INTERVAL as PWD_INTERVAL ,     '0' as RETRY,     'N' as  ADMIN,     USER_LEVEL as USER_LEVEL ,     'N' as  EXPIRE   ,      DATEDIFF("MM", LAST_LOGIN, SYSDATETIME()) AS DAYS_AFTER_LAST_LOGIN,     LCL_NM as LCL_NM,     LAST_LOGIN as LASTLOGIN_TIME     FROM    TMT_USER_INFO     WHERE   1=1     AND USER_ID =  @param0]
2025-02-28 14:43:41,730 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfoByRfidTag] Prepared SQL: [SELECT  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfoByRfidTag*/     STAFF_CD,     USE_APP,     DEPT_CD,     USER_GROUP,     TMNL_ID,     PASSWORD,     ENG_NM,     PWDCHANGE_TIME,     SYSDATE AS TODAY,     PWD_INTERVAL,     RETRY,     NVL (ADMIN, 'N') AS ADMIN,     USER_LEVEL,     EXPIRE,     TRUNC(TO_DATE (SYSDATE) - TO_DATE (LASTLOGIN_TIME)) AS DAYS_AFTER_LAST_LOGIN,     LCL_NM,     LASTLOGIN_TIME,     SIGNATURE     FROM    TB_STAFF     WHERE   1=1     AND RFID_TAG =  @param0]
2025-02-28 14:43:41,731 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryIpAccessList] Prepared SQL: [SELECT IP_ADDR, USER_LEVEL, USER_ID, USER_TYPE     FROM TB_IPADDR_ACCESS     WHERE 1 = 1     AND IP_ADDR =  @param0]
2025-02-28 14:43:41,731 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryModuleAccessRight] Prepared SQL: [SELECT  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryModuleAccessRight*/     USER_TYPE,     PGM_CODE,     USE_CHK     FROM    TB_APP_ACCESS     WHERE   1=1     AND   USER_TYPE =  @param0      AND   USER_ID   =  @param1      AND   PGM_CODE  =  @param2]
2025-02-28 14:43:41,733 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryMenuInfos] Prepared SQL: [SELECT  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryMenuInfos*/     SUBMENU      AS SUBMENU,     FORM_NAME    AS FORM_NAME,     FORM_CAPTION AS FORM_CAPTION,     TOP_MENU     AS TOPMENU     FROM         TB_BASIC_DEFINE     WHERE        PGM_CODE =  @param0      AND        ENABLE = 'Y']
2025-02-28 14:43:41,735 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateStaffAsExpired] Prepared SQL: [UPDATE /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateStaffAsExpired*/     TB_STAFF     SET     EXPIRE = 'Y',     UPDATE_TIME = SYSDATETIME()     WHERE  1=1     AND  STAFF_CD =  @param0]
2025-02-28 14:43:41,736 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateWrongPwdRetry] Prepared SQL: [UPDATE /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateWrongPwdRetry*/     TB_STAFF     SET     RETRY = (CASE WHEN RETRY = 9 THEN 8 ELSE RETRY END  + 1)     WHERE  1=1     AND  STAFF_CD =  @param0]
2025-02-28 14:43:41,736 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateLoginSuccess] Prepared SQL: [UPDATE  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateLoginSuccess*/     TB_STAFF     SET     RETRY = 0,     LASTLOGIN_TIME = SYSDATETIME()     WHERE   1=1     AND STAFF_CD =  @param0]
2025-02-28 14:43:41,736 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateUserPassword] Prepared SQL: [UPDATE  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateUserPassword*/     TB_STAFF     SET     PASSWORD       =  @param0 ,     PWDCHANGE_TIME = SYSDATETIME(),     UPDATE_TIME    = SYSDATETIME()     WHERE   1=1     AND STAFF_CD =   @param1]
2025-02-28 14:43:41,742 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryEquType] Prepared SQL: [SELECT DISTINCT EQU_TYPE1 AS CODE, EQU_TYPE1 AS NAME        FROM TB_EQU        ORDER BY EQU_TYPE1]
2025-02-28 14:43:41,743 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryEquCover] Prepared SQL: [SELECT DISTINCT E.EQU_NO AS CODE, E.EQU_NO AS NAME        FROM TB_EQU E, TB_EQU_COVER C        WHERE E.EQU_NO = C.EQU_NO        AND E.EQU_TYPE1 != 'YT'        AND C.BLOCK =  @param0         ORDER BY E.EQU_NO]
2025-02-28 14:43:41,744 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryShiftTimeNo] Prepared SQL: [SELECT NO AS CODE, NO AS NAME, SUBSTRING(ISNULL(S_TIME,''), 1, 2) + ':' + SUBSTRING(ISNULL(S_TIME,''), 3, 2) + ':00' AS VALUE1,        CONVERT(VARCHAR ,DATEADD(SS, -1, CAST(CONCAT(SUBSTRING(RIGHT ('00' + ISNULL(        CONVERT(VARCHAR, CASE WHEN E_TIME >= 2400 THEN E_TIME - 2400 ELSE E_TIME END),''),4), 1, 2),        ':', SUBSTRING(ISNULL(E_TIME,''), 3, 2), ':00') AS TIME))) VALUE2,        HOUR_CODE AS VALUE3, NULL AS VALUE4, NULL AS VALUE5, NULL AS FORE_COLOR, NULL AS BACK_COLOR        FROM TB_SHIFT        ORDER BY NO]
2025-02-28 14:43:41,745 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryShiftTime] Prepared SQL: [SELECT NO AS CODE,                SUBSTRING(S_TIME, 1, 2) + '/' + SUBSTRING(E_TIME, 1, 2) AS NAME,               s_time || '00' AS VALUE1,                SUBSTRING(REPLACE(CONVERT(VARCHAR, DATEADD(SS, -1, CAST(CONCAT(SUBSTRING(RIGHT('00' + ISNULL(CONVERT(VARCHAR,                                                                                                                     CASE WHEN E_TIME >= 2400 THEN E_TIME - 2400                                                                                                                          ELSE E_TIME                                                                                                                     END),'')                                                                                              ,4), 1, 2),                                                                               ':', SUBSTRING(ISNULL(E_TIME,''), 3, 2),                                                                        ':00') AS TIME)                                                          )                                         ),                                  ':', ''),                          1, 6)  AS VALUE2,               SUBSTRING(s_time, 1, 2) || ':' || SUBSTRING(s_time, 3, 2) || '-' || SUBSTRING(e_time, 1, 2) || ':' || SUBSTRING(e_time, 3, 2) AS VALUE3          FROM TB_SHIFT         ORDER BY NO]
2025-02-28 14:43:41,745 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryCurrencyUnit] Prepared SQL: [SELECT  DISTINCT /* Codes-CodeGeneralMap.select_InquiryCurrencyUnit */        CONFIG_VALUE AS CODE, CONFIG_VALUE AS NAME FROM TB_CONFIGURATION WHERE CONFIG_ID = 'BL_TMNL_CURRENCY'        UNION        SELECT GNRL_CODE AS CODE, GNRL_CODE AS NAME FROM TB_GNRL_CODE WHERE GNRL_TYPE ='CUR']
2025-02-28 14:43:41,746 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGeneralGroup] Prepared SQL: [SELECT  DISTINCT /* Codes-CodeGeneralMap.select_InquiryGeneralGroup */        GNRL_CODE     AS CODE,        GNRL_NM       AS NAME,        CODE_GROUP    AS VALUE1        FROM    TB_GNRL_CODE        WHERE   1=1        AND     GNRL_TYPE =  @param0]
2025-02-28 14:43:41,746 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGeneralRate] Prepared SQL: [SELECT  DISTINCT /* Codes-CodeGeneralMap.select_InquiryGeneralRate */        GNRL_CODE      AS CODE,        GNRL_NM        AS NAME,        CAST(RATE AS NVARCHAR(MAX))  AS VALUE1        FROM    TB_GNRL_CODE        WHERE   1=1        AND     GNRL_TYPE =  @param0]
2025-02-28 14:43:41,747 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGeneralServiceShiftChk] Prepared SQL: [SELECT GNRL_CODE as code,                 GNRL_NM as name,               GNRL_TYPE as type,                      '' as typename,              FORE_COLOR as fore_color,              BACK_COLOR as back_color,          DEFAULT_SELECT,              CODE_GROUP,       SERVICE_SHIFT_CHK as value1          FROM TB_GNRL_CODE         WHERE 1=1           AND GNRL_TYPE =  @param0       ORDER BY GNRL_CODE]
2025-02-28 14:43:41,748 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryBillType] Prepared SQL: [SELECT DISTINCT /* Codes-CodeGeneralMap.select_InquiryBillType */                        D.BILL_TYPE AS CODE,                        C.CODE_DESC AS NAME,                        C.ORDER_SEQ                   FROM TB_BILL_DEFINE D, TB_CODE_MASTER C                  WHERE D.BILL_TYPE = C.CODE                    AND C.CODE_TYPE = 'BLTP'                    AND D.USE_CHK = 'Y'               ORDER BY C.ORDER_SEQ]
2025-02-28 14:43:41,748 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryBillModeType] Prepared SQL: [SELECT /* Codes-CodeGeneralMap.select_InquiryBillModeType*/               CODE AS CODE, CODE_DESC AS NAME                       FROM TB_CODE_MASTER         WHERE CODE_TYPE = 'BMTP'         UNION ALL          SELECT GNRL_CODE AS CODE, GNRL_NM AS NAME          FROM TB_GNRL_CODE         WHERE GNRL_TYPE = 'SSR'           AND BILL_CHK = 'Y']
2025-02-28 14:43:41,750 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryCodeTypes] Prepared SQL: [SELECT  /* Codes-CodeGeneralMap.select_InquiryCodeTypes */        CODE_TYPE     AS CODE,        TYPE_NAME     AS NAME        FROM    TB_CODE_TYPE        WHERE   1=1]
2025-02-28 14:43:41,750 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryCodesFromMaster] Prepared SQL: [SELECT  /* Codes-CodeGeneralMap.select_InquiryCodesFromMaster*/        A.CODE        AS CODE,        A.CODE_DESC   AS NAME,        B.CODE_TYPE   AS TYPE,        B.TYPE_NAME   AS TYPENAME,        A.FORE_COLOR AS FORE_COLOR,        A.BACK_COLOR AS BACK_COLOR,        ISNULL(A.USE_CHK, 'N') AS USE_CHK        FROM    TB_CODE_MASTER A,        TB_CODE_TYPE B        WHERE   1=1        AND A.CODE_TYPE = B.CODE_TYPE        AND B.CODE_TYPE =  @param0                 ORDER BY ORDER_SEQ]
2025-02-28 14:43:41,751 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGeneralCodes] Prepared SQL: [select  /* Codes-CodeGeneralMap.select_InquiryCodesFromMaster*/      s_cd          as  code,      s_cd_desc     as name,      'TYPE'        as type,      'type_name'   as typename,      '' as fore_color,      '' as back_color,      '' as DEFAULT_SELECT,      '' as CODE_GROUP,      '' as VALUE1      from TMT_CD_MSTD      WHERE L_CD = 'MT'      AND   M_CD =  @param0       AND   S_CD_USE = 'Y']
2025-02-28 14:43:41,753 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVesselCodes] Prepared SQL: [SELECT  /* Codes-CodeGeneralMap.select-select_InquiryVesselCodes */        VSL_CD AS CODE,        VSL_NM AS NAME,        'VESSEL_CODE' AS TYPE,        'VESSEL_CODE' AS TYPENAME        FROM        TB_VSL        WHERE   1=1        ORDER BY CODE]
2025-02-28 14:43:41,754 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryVesselCodesAndLocalNames] Prepared SQL: [SELECT /* Codes-CodeGeneralMap.select-select_inquiryVesselLocalNames */        VSL_CD AS CODE         VSL_LNM AS NAME,        'VESSEL_LOCAL_NAME' AS TYPE,        'VESSEL_LOCAL_NAME' AS TYPENAME          FROM TB_VSL         ORDER BY CODE]
2025-02-28 14:43:41,755 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryVesselCodesBLOB] Prepared SQL: [SELECT VSL_CD CODE             , '' NAME          FROM TB_VSL_DEFINE         ORDER BY CODE]
2025-02-28 14:43:41,756 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdOpr] Prepared SQL: [WITH LANE_OPR AS        (SELECT L.PTNR_CODE, L.FORE_COLOR, L.BACK_COLOR        FROM TB_LANE_OPR  L, TB_BERTHPLAN  B        WHERE 1 = 1        AND B.VSL_CD =  @param0         AND B.CALL_YEAR =  @param1         AND B.CALL_SEQ =  @param2         AND L.LANE_CD = B.OUT_LANE)        SELECT DISTINCT          PTNR_CODE AS CODE,          ENG_SNM AS NAME,          FORE_COLOR AS VALUE1,          BACK_COLOR AS VALUE2,          FORE_COLOR AS FORE_COLOR,          BACK_COLOR AS BACK_COLOR        FROM        (SELECT L.PTNR_CODE, P.ENG_SNM, L.FORE_COLOR, L.BACK_COLOR          FROM LANE_OPR  AS L LEFT OUTER JOIN TB_PTNR  AS P          ON L.PTNR_CODE = P.PTNR_CODE          AND P.PTNR_TYPE = 'SHP'        UNION ALL        SELECT V.PTNR_CODE, P.ENG_SNM, V.FORE_COLOR, V.BACK_COLOR          FROM TB_VSL_OPR  AS V LEFT OUTER JOIN TB_PTNR  AS P          ON V.PTNR_CODE = P.PTNR_CODE          AND P.PTNR_TYPE = 'SHP'          WHERE  1 = 1          AND V.VSL_CD =  @param0           AND V.CALL_YEAR =  @param1           AND V.CALL_SEQ =  @param2           AND V.PTNR_CODE NOT IN (SELECT PTNR_CODE FROM LANE_OPR)        )  AS A        ORDER BY PTNR_CODE ASC]
2025-02-28 14:43:41,757 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdOprOnly] Prepared SQL: [SELECT DISTINCT              V.PTNR_CODE AS CODE,              P.ENG_SNM AS NAME,              P.FORE_COLOR AS VALUE1,              P.BACK_COLOR AS VALUE2,              V.FORE_COLOR AS FORE_COLOR,              V.BACK_COLOR AS BACK_COLOR               FROM TB_VSL_OPR V, TB_PTNR P              WHERE 1= 1               AND  V.VSL_CD =  @param0               AND  V.CALL_YEAR =  @param1                AND V.CALL_SEQ =  @param2                 AND V.PTNR_CODE = P.PTNR_CODE                AND P.PTNR_TYPE = 'SHP'           ORDER BY V.PTNR_CODE ASC]
2025-02-28 14:43:41,758 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdOprOther] Prepared SQL: [SELECT M.PTNR_CODE AS CODE,        P.ENG_SNM AS NAME,        P.FORE_COLOR AS VALUE1,        P.BACK_COLOR AS VALUE2,        P.FORE_COLOR AS FORE_COLOR,        P.BACK_COLOR AS BACK_COLOR        FROM        (SELECT DISTINCT PTNR_CODE        FROM TB_RESERVE        WHERE VSL_CD =  @param0         AND CALL_YEAR =  @param1         AND CALL_SEQ =  @param2         UNION SELECT DISTINCT PTNR_CODE        FROM TB_INVENTORY        WHERE VSL_CD =  @param0         AND CALL_YEAR =  @param1         AND CALL_SEQ =  @param2         UNION SELECT DISTINCT PTNR_CODE        FROM TB_MASTER        WHERE VSL_CD =  @param0         AND CALL_YEAR =  @param1         AND CALL_SEQ =  @param2         UNION SELECT DISTINCT PTNR_CODE        FROM TB_MOVINS        WHERE VSL_CD =  @param0         AND CALL_YEAR =  @param1         AND CALL_SEQ =  @param2         UNION SELECT DISTINCT PTNR_CODE        FROM TB_THRU        WHERE VSL_CD =  @param0         AND CALL_YEAR =  @param1         AND CALL_SEQ =  @param2 ) M        LEFT OUTER JOIN TB_PTNR P        ON M.PTNR_CODE = P.PTNR_CODE        AND P.PTNR_TYPE = 'SHP'        WHERE M.PTNR_CODE IS NOT NULL]
2025-02-28 14:43:41,759 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryTerminalFdestChk] Prepared SQL: [SELECT FND_PORT_CHK          FROM TB_TMNL A LEFT OUTER JOIN TB_TMNL_CFG B            ON A.TMNL_CD = B.TMNL_CD]
2025-02-28 14:43:41,760 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryTerminalPorChk] Prepared SQL: [SELECT POR_PORT_CHK        FROM TB_TMNL A LEFT OUTER JOIN TB_TMNL_CFG B         ON A.TMNL_CD = B.TMNL_CD]
2025-02-28 14:43:41,760 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryTerminalPort] Prepared SQL: [SELECT PORT        FROM TB_TMNL A LEFT OUTER JOIN TB_TMNL_CFG B          ON A.TMNL_CD = B.TMNL_CD]
2025-02-28 14:43:41,761 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdPorts] Prepared SQL: [WITH LANE_POD               AS (SELECT MIN(CAST(L.PORT_SEQ AS NUMERIC(5,0))) SEQ                         ,L.CALLING_PORT PORT                    FROM TB_LANE_PORT L                         ,TB_BERTHPLAN B                   WHERE B.VSL_CD =  @param0                      AND B.CALL_YEAR =  @param1                     AND B.CALL_SEQ =  @param2                     AND L.LANE_CD = B.OUT_LANE                   GROUP BY L.CALLING_PORT),               VSL_POD               AS (SELECT POD PORT                         ,PORT_PREFIX                         ,FORE_COLOR                         ,BACK_COLOR                     FROM TB_VSL_POD                   WHERE VSL_CD =   @param0                     AND CALL_YEAR =  @param1                     AND CALL_SEQ =  @param2 ),               UNLO_PORT               AS (SELECT ISNULL(CNTRY_CD, '') + ISNULL(PORT_CD, '') PORT                        ,PORT_PREFIX                         ,FORE_COLOR                         ,BACK_COLOR                     FROM TB_PORT)         SELECT V.PORT          AS CODE                 ,V.PORT         AS NAME                 ,V.FORE_COLOR   AS VALUE1                 ,V.BACK_COLOR   AS VALUE2                 ,V.FORE_COLOR   AS FORE_COLOR                 ,V.BACK_COLOR   AS BACK_COLOR                 ,V.PORT_PREFIX  AS VALUE3                 ,CAST(L.SEQ AS NVARCHAR(MAX)) AS VALUE4                 ,''             AS VALUE5                 ,L.SEQ           FROM VSL_POD V LEFT OUTER JOIN LANE_POD L            ON V.PORT = L.PORT        UNION ALL         SELECT L.PORT          AS CODE                 ,L.PORT         AS NAME                 ,U.FORE_COLOR   AS VALUE1                 ,U.BACK_COLOR   AS VALUE2                 ,U.FORE_COLOR   AS FORE_COLOR                 ,U.BACK_COLOR   AS BACK_COLOR                 ,U.PORT_PREFIX  AS VALUE3                 ,CAST(L.SEQ AS NVARCHAR(MAX)) AS VALUE4                 ,''             AS VALUE5                 ,L.SEQ            FROM LANE_POD L LEFT OUTER JOIN UNLO_PORT U             ON L.PORT = U.PORT          WHERE L.PORT NOT IN (SELECT PORT FROM VSL_POD)           ORDER BY SEQ, CODE]
2025-02-28 14:43:41,762 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdPortOnly] Prepared SQL: [SELECT V.POD AS CODE,           P.PORT_NM AS NAME,           V.FORE_COLOR AS VALUE1,           V.BACK_COLOR AS VALUE2,           V.FORE_COLOR AS FORE_COLOR,           V.BACK_COLOR AS BACK_COLOR       FROM TB_VSL_POD V LEFT OUTER JOIN TB_PORT P       ON V.POD = ISNULL(P.CNTRY_CD,'') + ISNULL(P.PORT_CD,'')          WHERE V.VSL_CD =  @param0           AND V.CALL_YEAR =  @param1           AND V.CALL_SEQ =  @param2         ORDER BY CODE]
2025-02-28 14:43:41,762 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdVessel] Prepared SQL: [SELECT DISTINCT           ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS CODE,           ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS NAME,           STORAGE_TYPE AS VALUE1,           CASE WHEN (ATD IS NULL OR ATD = '') THEN 'N' ELSE 'Y' END AS VALUE2,           NULL AS FORE_COLOR, NULL AS BACK_COLOR        FROM TB_BERTHPLAN        ORDER BY CODE]
2025-02-28 14:43:41,763 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryAssignableVvdVesselOnly] Prepared SQL: [SELECT DISTINCT            ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS CODE,           ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS NAME,           STORAGE_TYPE AS VALUE1,           CASE ATD WHEN NULL THEN 'N' ELSE 'Y' END AS VALUE2,           NULL AS FORE_COLOR, NULL AS BACK_COLOR          FROM TB_BERTHPLAN         WHERE (STORAGE_TYPE IS NULL OR STORAGE_TYPE = '' OR VSL_CD = 'TBA' OR STORAGE_TYPE = 'X')           AND ATD IS NULL           AND ISNULL(STATUS, 'NULL') <> 'C'           AND (YARD_CLOSE IS NULL OR YARD_CLOSE > SYSDATETIME())         ORDER BY CODE]
2025-02-28 14:43:41,764 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryOprAgency] Prepared SQL: [SELECT  /* Codes-CodeGeneralMap.select-select_InquiryOprAgency */        DISTINCT A.AGENCY_CODE AS CODE,                A.AGENCY_CODE AS NAME,                A.AGENCY_TYPE AS TYPE,                'AGENCY_TYPE' AS TYPENAME          FROM TB_AGENCY A, TB_PTNR P          WHERE 1 = 1            AND A.AGENCY_TYPE = P.PTNR_TYPE            AND A.PTNR_CODE = P.PTNR_CODE            AND A.AGENCY_TYPE = 'SHP'            AND A.PTNR_CODE =  @param0         ORDER BY  CODE]
2025-02-28 14:43:41,765 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryInspectionArea] Prepared SQL: [SELECT BLOCKAREAS AS CODE, BLOCKAREAS AS NAME        FROM TB_GNRL_CODE        WHERE GNRL_TYPE =  @param0  AND GNRL_CODE =  @param1         ORDER BY BLOCKAREAS]
2025-02-28 14:43:41,765 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryLanePortCodes] Prepared SQL: [SELECT CALLING_PORT AS CODE             , CALLING_PORT AS NAME          FROM TB_LANE_PORT         WHERE 1=1           AND LANE_CD =  @param0          ORDER BY CONVERT(INT, PORT_SEQ)]
2025-02-28 14:43:41,766 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryLanePortCodesOnly] Prepared SQL: [SELECT DISTINCT CALLING_PORT AS CODE             , CALLING_PORT AS NAME          FROM TB_LANE_PORT         WHERE 1=1           AND LANE_CD =  @param0          ORDER BY CODE]
2025-02-28 14:43:41,767 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryPackingGroups] Prepared SQL: [SELECT         PACKING_GRP AS CODE        ,DESCRIPTION AS NAME        FROM TB_IMDGPREMIUM ORDER BY 1]
2025-02-28 14:43:41,767 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryMarinePollut] Prepared SQL: [SELECT DISTINCT        MARINE_POLLUT AS CODE        ,MARINE_POLLUT AS NAME        FROM TB_IMDGDATA ORDER BY 1]
2025-02-28 14:43:41,768 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryContainerSize] Prepared SQL: [SELECT DISTINCT T.CODE1 AS CODE, ((T.CODE1 + ' - ') + LTRIM(RTRIM(SUBSTRING(T.CODE1_DESC, 8, 6)))) AS NAME, T.CODE1_DESC AS VALUE1        FROM TB_SIZE_CODE T ORDER BY T.CODE1]
2025-02-28 14:43:41,768 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryContainerHeightWidth] Prepared SQL: [SELECT DISTINCT CODE2 AS CODE, REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(CODE2_DESC, 'ft', ''), 'm', ''), 'Width', 'W'), 'Height', 'H'), '&', '') AS NAME          FROM TB_SIZE_CODE        ORDER BY CODE2]
2025-02-28 14:43:41,769 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryContainerType] Prepared SQL: [SELECT DISTINCT T.GCODE AS Code, T.GCODE_DESC AS Name, T.GCODE_FORE_COLOR VALUE1, T.GCODE_BACK_COLOR VALUE2,                T.GCODE_FORE_COLOR FORE_COLOR, T.GCODE_BACK_COLOR BACK_COLOR        FROM TB_TYPE_CODE T ORDER BY T.GCODE]
2025-02-28 14:43:41,769 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_PositionRule] Prepared SQL: [SELECT DISTINCT RULE_CD AS CODE,VALUE AS NAME        FROM TB_POSRULE        WHERE ITEM = 'RULE_DESC'        ORDER BY RULE_CD ASC]
2025-02-28 14:43:41,770 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_PositionRuleMain] Prepared SQL: [SELECT RULE_CD AS CODE,RULE_DESC AS NAME          FROM TB_POSRULE_MAIN         ORDER BY RULE_CD]
2025-02-28 14:43:41,776 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_PositionRuleRenewed] Prepared SQL: [SELECT RULE_CD As Code,RULE_DESC As Name        FROM TB_POSRULE_RENEWED        ORDER BY RULE_CD]
2025-02-28 14:43:41,777 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_PositionRuleMixture] Prepared SQL: [SELECT DISTINCT RULE_CD AS CODE, VALUE AS NAME          FROM TB_POSRULE_MIXTURE         WHERE ITEM = 'RULE_DESC'         ORDER BY RULE_CD]
2025-02-28 14:43:41,777 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_PositionRuleStackVolume] Prepared SQL: [SELECT DISTINCT RULE_CD AS CODE, RULE_DESC AS NAME          FROM TB_POSRULE_STACK_VOLUME        ORDER BY RULE_CD]
2025-02-28 14:43:41,779 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryBerth] Prepared SQL: [SELECT BERTH AS CODE,        BERTH AS NAME        FROM TB_BERTH        WHERE 1=1]
2025-02-28 14:43:41,779 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryBitt] Prepared SQL: [SELECT BITT AS CODE,        BITT AS NAME        FROM TB_BITT        WHERE 1=1        ORDER BY BERTH, BITT]
2025-02-28 14:43:41,780 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_VesselVVDs] Prepared SQL: [SELECT R.VVD        AS CODE              , R.VVD        AS NAME              , C.FORE_COLOR AS VALUE1              , C.BACK_COLOR AS VALUE2              , C.FORE_COLOR              , C.BACK_COLOR           FROM (SELECT RANK()                          OVER (                            ORDER BY A.VVD) - 1 AS RANK                        , A.VVD                  FROM (SELECT DISTINCT VSL_CD + '-' + CALL_YEAR + '-' + CALL_SEQ AS VVD                           FROM TB_INVENTORY) A) R                JOIN (SELECT ORDER_SEQ                           , FORE_COLOR                           , BACK_COLOR                        FROM TB_COLOR) C                  ON ( R.RANK % (SELECT Count(*)                                   FROM TB_COLOR) ) + 1 = C.ORDER_SEQ          ORDER BY R.VVD]
2025-02-28 14:43:41,780 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_VesselUserVoy] Prepared SQL: [SELECT R.USER_VOY        AS CODE              , R.VVD        AS NAME              , C.FORE_COLOR AS VALUE1              , C.BACK_COLOR AS VALUE2              , C.FORE_COLOR              , C.BACK_COLOR           FROM (SELECT RANK()                          OVER (                            ORDER BY A.VVD) - 1 AS RANK                        , A.VVD                       , A.USER_VOY                  FROM (SELECT DISTINCT VSL_CD + '-' + CALL_YEAR + '-' + CALL_SEQ AS VVD                             , USER_VOY AS USER_VOY                           FROM TB_INVENTORY) A) R                JOIN (SELECT ORDER_SEQ                           , FORE_COLOR                           , BACK_COLOR                        FROM TB_COLOR) C                  ON ( R.RANK % (SELECT Count(*)                                   FROM TB_COLOR) ) + 1 = C.ORDER_SEQ          ORDER BY R.VVD]
2025-02-28 14:43:41,781 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_railScheduleInInventory] Prepared SQL: [SELECT DISTINCT B.TRN_VOY AS CODE, CONCAT(B.TRN_CD, '-', B.TRN_YEAR, '-', B.TRN_SEQ) AS NAME, B.TRN_YEAR, B.TRN_SEQ          FROM TB_INVENTORY A, TB_RAILSCH B         WHERE A.TRN_VOY2 = B.TRN_VOY         ORDER BY B.TRN_YEAR DESC, B.TRN_SEQ DESC]
2025-02-28 14:43:41,782 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_VesselCallSeq] Prepared SQL: [SELECT DISTINCT ISNULL(I.VSL_CD,'') + '-' + ISNULL(CALL_SEQ,'') AS CODE,        ISNULL(I.VSL_CD,'') + '-' + ISNULL(I.CALL_SEQ,'') + ' : ' + ISNULL(V.VSL_NM,'') AS NAME        FROM TB_VSL V, TB_INVENTORY I        WHERE V.VSL_CD = I.VSL_CD        ORDER BY CODE]
2025-02-28 14:43:41,782 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryReeferArea] Prepared SQL: [SELECT /* Codes-CodeGeneralMap.select-select_InquiryReeferArea */                RF_AREA AS CODE, '' AS NAME              FROM (SELECT DISTINCT BLOCK RF_AREA                               FROM TB_YSLOT                              WHERE RF_CHK = 'Y'                    UNION ALL                    SELECT DISTINCT BLOCK RF_AREA                      FROM TB_YSLOT_USAGE                     WHERE RF_CHK = 'Y'                    UNION ALL                    SELECT AREA RF_AREA                      FROM TB_AREA                     WHERE AREA_USE = 'R' OR AREA_USE2 = 'R') RF          ORDER BY RF_AREA]
2025-02-28 14:43:41,783 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InventoryPOD] Prepared SQL: [SELECT DISTINCT I.POD         AS CODE                        ,P.PORT_NM     AS NAME                        ,P.PORT_PREFIX AS VALUE1                        ,P.PORT_CODE   AS VALUE2                        ,P.FORE_COLOR                        ,P.BACK_COLOR           FROM (SELECT DISTINCT POD                   FROM TB_INVENTORY                  WHERE POD IS NOT NULL                    AND POD <> '') I                ,TB_PORT P          WHERE I.POD = P.CNTRY_CD                        + P.PORT_CD         ORDER BY I.POD]
2025-02-28 14:43:41,783 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InventoryFPOD] Prepared SQL: [SELECT DISTINCT I.FPOD        AS CODE                        ,P.PORT_NM     AS NAME                        ,P.PORT_PREFIX AS VALUE1                        ,P.PORT_CODE   AS VALUE2                        ,P.FORE_COLOR                        ,P.BACK_COLOR           FROM (SELECT DISTINCT FPOD                   FROM TB_INVENTORY                  WHERE FPOD IS NOT NULL                    AND FPOD <> '') I                ,TB_PORT P          WHERE I.FPOD = P.CNTRY_CD                        + P.PORT_CD         ORDER BY I.FPOD]
2025-02-28 14:43:41,784 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_Zones] Prepared SQL: [SELECT   DISTINCT ISNULL(ZONE_ID,'') + '/' + ISNULL(ZONE_DATA_TYPE, '') AS CODE, '' AS NAME        FROM   TB_ZONE_ID        WHERE   ZONE_DATA_TYPE IN ('BLOCK', 'AREA')        ORDER BY   1]
2025-02-28 14:43:41,784 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_ShiftGroups] Prepared SQL: [SELECT        B.QUEUE_NAME AS CODE, B.QUEUE_DESCRIPTION AS NAME        FROM        (SELECT BLOCK AS QUEUE_NAME, IC_CHK AS QUEUE_TYPE,'' AS QUEUE_DESCRIPTION FROM TB_BLOCK        WHERE IC_CHK IS NOT NULL        UNION SELECT AREA AS QUEUE_NAME, IC_CHK AS QUEUE_TYPE,'' AS QUEUE_DESCRIPTION  FROM TB_AREA        WHERE IC_CHK IS NOT NULL        UNION SELECT 'HK' AS QUEUE_NAME,  'M' AS QUEUE_TYPE,'Housekeeping' AS QUEUE_DESCRIPTION        UNION SELECT 'HK2' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 2' AS QUEUE_DESCRIPTION        UNION SELECT 'HK3' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 3' AS QUEUE_DESCRIPTION        UNION SELECT 'HK4' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 4' AS QUEUE_DESCRIPTION        UNION SELECT 'HK5' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 5' AS QUEUE_DESCRIPTION        UNION SELECT 'HK6' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 6' AS QUEUE_DESCRIPTION        UNION SELECT 'HK7' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 7' AS QUEUE_DESCRIPTION        UNION SELECT 'HK8' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 8' AS QUEUE_DESCRIPTION        UNION SELECT 'HK9' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 9' AS QUEUE_DESCRIPTION                UNION SELECT 'HK10' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 10' AS QUEUE_DESCRIPTION        UNION SELECT 'HK11' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 11' AS QUEUE_DESCRIPTION        UNION SELECT 'HK12' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 12' AS QUEUE_DESCRIPTION        UNION SELECT 'HK13' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 13' AS QUEUE_DESCRIPTION        UNION SELECT 'HK14' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 14' AS QUEUE_DESCRIPTION        UNION SELECT 'HK15' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 15' AS QUEUE_DESCRIPTION) B        LEFT OUTER JOIN TB_DISPATCH_QUEUE Q        ON B.QUEUE_NAME = Q.QUEUE_NAME        WHERE B.QUEUE_TYPE = 'M'        ORDER BY 1 ASC]
2025-02-28 14:43:41,785 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-GCNo] Prepared SQL: [SELECT G.EQU_NO AS CODE, G.EQU_NO AS NAME         FROM TB_GC G, TB_EQU E WHERE G.EQU_NO = E.EQU_NO AND E.EQU_TYPE1 = 'GC'        ORDER BY G.EQU_NO]
2025-02-28 14:43:41,785 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-YTNo] Prepared SQL: [SELECT E.EQU_NO AS CODE, E.EQU_NO AS NAME        FROM TB_EQU E WHERE E.EQU_TYPE1 = 'YT'        ORDER BY E.EQU_NO]
2025-02-28 14:43:41,786 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-DbLink] Prepared SQL: [SELECT NAME CODE, ISNULL(NAME,'') + ' : ' + ISNULL(CATALOG,'') NAME FROM sys.servers WHERE SERVER_ID > 0]
2025-02-28 14:43:41,786 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryStoppageCodes] Prepared SQL: [SELECT  DISTINCT /* Codes-CodeGeneralMap.select-InquiryStoppageCodes */        STOP_CODE AS CODE,        STOP_DESC AS NAME,        STOP_TYPE AS VALUE1,        STOP_TYPE AS VALUE2,        FORE_COLOR AS FORE_COLOR,        BACK_COLOR AS BACK_COLOR        FROM    TB_STPCODE]
2025-02-28 14:43:41,787 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-validPackingGroup] Prepared SQL: [SELECT DISTINCT I.PACKING_GRP CODE, P.DESCRIPTION NAME          FROM TB_IMDGDATA I LEFT OUTER JOIN TB_IMDGPREMIUM P            ON I.PACKING_GRP = P.PACKING_GRP          WHERE I.PACKING_GRP IS NOT NULL           AND CLASS =  @param0            AND UNNO =  @param1          ORDER BY I.PACKING_GRP ASC]
2025-02-28 14:43:41,788 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-allPackingGroup] Prepared SQL: [SELECT DISTINCT I.PACKING_GRP CODE, P.DESCRIPTION NAME          FROM TB_IMDGDATA I LEFT OUTER JOIN TB_IMDGPREMIUM P            ON I.PACKING_GRP = P.PACKING_GRP         WHERE I.PACKING_GRP IS NOT NULL         ORDER BY I.PACKING_GRP ASC]
2025-02-28 14:43:41,788 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquirySegregationCode] Prepared SQL: [SELECT SEGREGATION AS CODE, '' AS NAME          FROM TB_SEGREGATIONCODE]
2025-02-28 14:43:41,789 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InventoryOperator] Prepared SQL: [SELECT DISTINCT I.PTNR_CODE  AS CODE                        ,P.ENG_SNM    AS NAME                        ,P.FORE_COLOR AS VALUE1                        ,P.BACK_COLOR AS VALUE2                        ,P.FORE_COLOR AS FORE_COLOR                        ,P.BACK_COLOR AS BACK_COLOR           FROM (SELECT DISTINCT PTNR_CODE                   FROM TB_INVENTORY                  WHERE PTNR_CODE IS NOT NULL                    AND PTNR_CODE <> '')I                ,TB_PTNR P          WHERE I.PTNR_CODE = P.PTNR_CODE          ORDER BY I.PTNR_CODE]
2025-02-28 14:43:41,790 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryAccessibleProgramList] Prepared SQL: [SELECT  A.CODE AS CODE, A.CODE_DESC AS NAME          FROM TB_CODE_MASTER A, TB_APP_ACCESS B         WHERE 1 = 1          AND A.CODE = B.PGM_CODE          AND A.CODE_TYPE = 'PRGMA'          AND A.USE_CHK = 'Y'          AND B.USE_CHK = 'Y'          AND B.USER_TYPE =  @param0           AND B.USER_ID =  @param1           AND EXISTS (SELECT 'X'                        FROM TB_BASIC_DEFINE C                       WHERE C.PGM_CODE = B.PGM_CODE                         AND C.ENABLE = 'Y' )        ORDER BY ORDER_SEQ]
2025-02-28 14:43:41,791 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryResourceCode] Prepared SQL: [SELECT  /* Codes-CodeGeneralMap.select_InquiryResourceCode */        RS_CODE AS CODE, RS_NAME AS NAME        FROM TB_RS_CODE        WHERE RS_TYPE =  @param0         AND USE_CHK = 'Y'        ORDER BY RS_CODE]
2025-02-28 14:43:41,791 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryStevedore] Prepared SQL: [SELECT /* Codes-CodeGeneralMap.select_InquiryStevedore */        WORKER_CD, ENG_NM        FROM TB_STEVEDORE        ORDER BY WORKER_CD]
2025-02-28 14:43:41,792 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryAssignedGc] Prepared SQL: [SELECT /* Common-CodeItem.select-InquiryAssignedGc */            DISTINCT EQU_NO CODE, EQU_NO NAME        FROM TB_GANG_ASGN        WHERE VSL_CD =  @param0           AND CALL_YEAR =  @param1           AND CALL_SEQ =  @param2         ORDER BY EQU_NO]
2025-02-28 14:43:41,792 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-sztpGroupCodes] Prepared SQL: [SELECT R.GR_CODE      AS CODE              , R.GR_CODE    AS NAME              , C.FORE_COLOR AS VALUE1              , C.BACK_COLOR AS VALUE2              , C.FORE_COLOR              , C.BACK_COLOR           FROM (SELECT RANK()                          OVER (                            ORDER BY A.GR_CODE) - 1 RANK                        , A.GR_CODE                   FROM (SELECT DISTINCT GR_CODE                           FROM TB_GSZTP                          WHERE ISO_TYPE = '6346') A) R                JOIN (SELECT ORDER_SEQ                           , FORE_COLOR                           , BACK_COLOR                        FROM TB_COLOR) C                  ON ( R.RANK % (SELECT Count(*)                                   FROM TB_COLOR) ) + 1 = C.ORDER_SEQ          ORDER BY R.GR_CODE]
2025-02-28 14:43:41,793 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-sztpPrivateCodes] Prepared SQL: [SELECT DISTINCT PRI_CODE AS CODE,               PRI_CODE AS NAME          FROM TB_GSZTP         ORDER BY CODE]
2025-02-28 14:43:41,793 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryYardPosition] Prepared SQL: [SELECT BLOCK CODE, BLOCK NAME        FROM TB_BLOCK        UNION ALL SELECT AREA CODE, AREA NAME         FROM TB_AREA]
2025-02-28 14:43:41,794 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryQuayPosition] Prepared SQL: [SELECT BLOCK CODE, BLOCK NAME        FROM TB_BLOCK        WHERE IC_CHK = 'Q'        UNION ALL SELECT AREA CODE, AREA NAME        FROM TB_AREA        WHERE IC_CHK = 'Q'        UNION SELECT BERTH CODE, BERTH NAME        FROM TB_BERTH]
2025-02-28 14:43:41,794 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGatePosition] Prepared SQL: [SELECT BLOCK CODE, BLOCK NAME        FROM TB_BLOCK        WHERE IC_CHK = 'G'        UNION ALL SELECT AREA CODE, AREA NAME        FROM TB_AREA        WHERE IC_CHK = 'G']
2025-02-28 14:43:41,795 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryRailPosition] Prepared SQL: [SELECT BLOCK CODE, BLOCK NAME        FROM TB_BLOCK        WHERE IC_CHK = 'R'        UNION ALL SELECT AREA CODE, AREA NAME        FROM TB_AREA        WHERE IC_CHK = 'R']
2025-02-28 14:43:41,795 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGroupCode] Prepared SQL: [SELECT JOB_CD CODE, JOB_NM NAME        FROM TB_JOB_COLOR        WHERE JOB_TYPE = 'BTB']
2025-02-28 14:43:41,796 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryPlanningPatternVVD] Prepared SQL: [SELECT DISTINCT P.VSL_ID CODE, P.VSL_ID NAME        FROM TB_PLANPTN P LEFT OUTER JOIN        (SELECT ISNULL(VSL_CD,'') + ' - ' + ISNULL(CALL_YEAR,'') + ' - ' + ISNULL(CALL_SEQ,'') VSL_ID        FROM TB_BERTHPLAN) B          ON P.VSL_ID = B.VSL_ID         ORDER BY P.VSL_ID]
2025-02-28 14:43:41,796 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryPlanningPatternUserVoy] Prepared SQL: [SELECT DISTINCT CASE B.USER_VOY WHEN NULL THEN P.VSL_ID ELSE B.USER_VOY AS NAME           FROM (SELECT DISTINCT VSL_ID                   FROM TB_PLANPTN) P LEFT OUTER JOIN               (SELECT ISNULL(VSL_CD,'') + ' - ' + ISNULL(CALL_YEAR,'') + ' - ' + ISNULL(CALL_SEQ,'') VSL_ID                      , USER_VOY                FROM TB_BERTHPLAN) B            ON P.VSL_ID = B.VSL_ID          WHERE B.USER_VOY IS NOT NULL         ORDER BY P.VSL_ID]
2025-02-28 14:43:41,797 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryContainerLengthInDB] Prepared SQL: [SELECT DISTINCT CODE1 CODE, CODE1_DESC NAME        FROM TB_SIZE_CODE        ORDER BY CODE1]
2025-02-28 14:43:41,797 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryGroupingPatternCodes] Prepared SQL: [SELECT DISTINCT FILTER_CD CODE, FILTER_CD NAME        FROM TB_GP        ORDER BY FILTER_CD]
2025-02-28 14:43:41,798 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryWorkGroupNo] Prepared SQL: [SELECT P.GROUP_NO AS CODE, P.GROUP_NO AS NAME        FROM TB_WORK_GRP P,        (SELECT DISTINCT GROUP_NO FROM TB_SHIFTPLAN WHERE ACTUAL_TIME IS NULL) B        WHERE P.GROUP_NO = B.GROUP_NO        AND ISNULL(WRK_TYPE, ' ') != 'V'        ORDER BY P.GROUP_NO]
2025-02-28 14:43:41,798 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryVVD] Prepared SQL: [SELECT DISTINCT ISNULL(VSL_CD,'') + '-' + ISNULL(CALL_YEAR,'') + '-' + ISNULL(CALL_SEQ,'') AS CODE,              ISNULL(VSL_CD,'') + '-' + ISNULL(CALL_YEAR,'') + '-' + ISNULL(CALL_SEQ,'') AS NAME        FROM TB_INVENTORY        ORDER BY ISNULL(VSL_CD,'') + '-' + ISNULL(CALL_YEAR,'') + '-' + ISNULL(CALL_SEQ,'')]
2025-02-28 14:43:41,799 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryUserVoy] Prepared SQL: [SELECT DISTINCT ISNULL(USER_VOY,'') AS CODE             , ISNULL(VSL_CD,'') + '-' + ISNULL(CALL_YEAR,'') + '-' + ISNULL(CALL_SEQ,'') AS NAME          FROM TB_INVENTORY         ORDER BY ISNULL(VSL_CD,'') + '-' + ISNULL(CALL_YEAR,'') + '-' + ISNULL(CALL_SEQ,'')]
2025-02-28 14:43:41,800 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryPreVVD] Prepared SQL: [SELECT DISTINCT ISNULL(PREV_VSL,'') + '-' + ISNULL(PREV_YEAR,'') + '-' + ISNULL(PREV_SEQ,'') AS CODE,              ISNULL(PREV_VSL,'') + '-' + ISNULL(PREV_YEAR,'') + '-' + ISNULL(PREV_SEQ,'') AS NAME        FROM TB_INVENTORY        ORDER BY ISNULL(PREV_VSL,'') + '-' + ISNULL(PREV_YEAR,'') + '-' + ISNULL(PREV_SEQ,'')]
2025-02-28 14:43:41,800 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryPreUserVoy] Prepared SQL: [SELECT DISTINCT ISNULL(PREV_USER_VOY,'') AS CODE             , ISNULL(PREV_VSL,'') + '-' + ISNULL(PREV_YEAR,'') + '-' + ISNULL(PREV_SEQ,'') AS NAME          FROM TB_INVENTORY         WHERE PREV_USER_VOY IS NOT NULL         ORDER BY ISNULL(PREV_VSL,'') + '-' + ISNULL(PREV_YEAR,'') + '-' + ISNULL(PREV_SEQ,'')]
2025-02-28 14:43:41,801 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryTierCode] Prepared SQL: [SELECT CODE               ,CODE_DESC AS NAME               ,CODE_TYPE AS VALUE1               ,CODE_TYPE AS VALUE2               ,FORE_COLOR               ,BACK_COLOR           FROM TB_CODE_MASTER          WHERE CODE_TYPE = 'TIER'            AND CONVERT(INT, ISNULL(CODE, 0)) <= (SELECT MAX(MXTIER)                                                              FROM TB_BLOCK)]
2025-02-28 14:43:41,801 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryBoundaryPlanOPR] Prepared SQL: [SELECT DISTINCT PTNR_CODE  AS CODE                       ,ENG_SNM    AS NAME                        ,BACK_COLOR AS VALUE1                        ,FORE_COLOR AS VALUE2                        ,FORE_COLOR                        ,BACK_COLOR         FROM   TB_PTNR P         WHERE  EXISTS (SELECT 1                        FROM   (SELECT DISTINCT ',' + OPRS + ',' AS OPRS                                FROM   TB_RND_BNDR                                UNION                                SELECT DISTINCT ',' + OPRS + ',' AS OPRS                                FROM   TB_BOUNDARY) B                        WHERE  B.OPRS LIKE ( '%,' + P.PTNR_CODE + ',%' ))         ORDER  BY PTNR_CODE]
2025-02-28 14:43:41,802 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryBoundaryPlanPOD] Prepared SQL: [SELECT DISTINCT PODS AS CODE                        ,''  AS NAME           FROM TB_BOUNDARY          WHERE PODS IS NOT NULL                AND PODS <> ''                AND PODS <> '*']
2025-02-28 14:43:41,803 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryBoundaryPlanVVD] Prepared SQL: [SELECT R.VSL_ID       AS CODE              , R.USER_VOY     AS NAME              , R.STORAGE_TYPE AS VALUE1              , R.DEPARTURED   AS VALUE2              , C.FORE_COLOR              , C.BACK_COLOR           FROM (SELECT RANK()                          OVER (                            ORDER BY A.VSL_ID) - 1 AS RANK                        , A.VSL_ID                       , A.USER_VOY                       , A.STORAGE_TYPE                        , A.DEPARTURED                   FROM (SELECT DISTINCT P.VSL_ID                                       , B.USER_VOY                                      , B.STORAGE_TYPE                                       , CASE B.ATD                                           WHEN NULL THEN 'N'                                           ELSE 'Y'                                         END AS DEPARTURED                           FROM (SELECT DISTINCT VSL_CD                                               , CALL_YEAR                                               , CALL_SEQ                                              , USER_VOY                                              , STORAGE_TYPE                                               , ATD                                   FROM TB_BERTHPLAN) B                                JOIN (SELECT DISTINCT VSL_ID                                        FROM TB_RND_BNDR                                      UNION ALL                                      SELECT DISTINCT VSL_ID                                        FROM TB_BOUNDARY) P                                  ON B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ =                                     P.VSL_ID)                        A) R                                                     JOIN (SELECT ORDER_SEQ                           , FORE_COLOR                           , BACK_COLOR                        FROM TB_COLOR) C                  ON ( R.RANK % (SELECT Count(*)                                   FROM TB_COLOR) ) + 1 = C.ORDER_SEQ          ORDER BY R.VSL_ID]
2025-02-28 14:43:41,804 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryJobClassCode] Prepared SQL: [SELECT JOB_CD AS CODE               ,JOB_NM AS NAME               ,'' AS VALUE1               ,'' AS VALUE2               ,FORE_COLOR               ,BACK_COLOR           FROM TB_JOB_COLOR          WHERE JOB_TYPE =  @param0]
2025-02-28 14:43:41,804 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryDischargeVVD] Prepared SQL: [SELECT I.PREV_VSL + '-' + I.PREV_YEAR + '-' + I.PREV_SEQ AS CODE               ,I.PREV_VSL + '-' + I.PREV_YEAR + '-' + I.PREV_SEQ AS NAME          FROM (SELECT *                   FROM TB_INVENTORY                  WHERE IX_CD = 'X'                    AND DELV = 'S') I                           INNER JOIN (SELECT *                                         FROM TB_BERTHPLAN                                       WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                   ON I.PREV_VSL = B.VSL_CD                                  AND I.PREV_YEAR = B.CALL_YEAR                                  AND I.PREV_SEQ = B.CALL_SEQ         UNION         SELECT I.VSL_CD + '-' + I.CALL_YEAR + '-' + I.CALL_SEQ AS CODE              ,I.VSL_CD + '-' + I.CALL_YEAR + '-' + I.CALL_SEQ AS NAME          FROM (SELECT *                  FROM TB_INVENTORY                 WHERE IX_CD <> 'X') I                                         INNER JOIN (SELECT *                                                      FROM TB_BERTHPLAN                                                     WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                                 ON I.VSL_CD = B.VSL_CD                                                AND I.CALL_YEAR = B.CALL_YEAR                                                AND I.CALL_SEQ = B.CALL_SEQ]
2025-02-28 14:43:41,805 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryDischargeUserVoy] Prepared
2025-02-28 14:43:41,805 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryBoundaryDischargeVVD] Prepared SQL: [SELECT P.DISCH_VSL AS CODE              ,B.DISCH_VSL AS NAME          FROM (SELECT *                  FROM TB_BOUNDARY                 WHERE DISCH_VSL IS NOT NULL) P                                      INNER JOIN (SELECT *                                                    FROM TB_BERTHPLAN                                                  WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                             ON P.DISCH_VSL = B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ         UNION         SELECT P.DISCH_VSL AS CODE              ,B.DISCH_VSL AS NAME          FROM (SELECT *                   FROM TB_RND_BNDR                 WHERE DISCH_VSL IS NOT NULL) P                                      INNER JOIN (SELECT *                                                    FROM TB_BERTHPLAN B                                                   WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                             ON P.DISCH_VSL = B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ]
2025-02-28 14:43:41,806 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryBoundaryDischargeUserVoy] Prepared SQL: [SELECT B.USER_VOY AS CODE             , P.DISCH_VSL AS NAME          FROM (SELECT *                  FROM TB_BOUNDARY                 WHERE DISCH_VSL IS NOT NULL) P                                      INNER JOIN (SELECT *                                                    FROM TB_BERTHPLAN                                                  WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                             ON P.DISCH_VSL = B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ          UNION         SELECT B.USER_VOY AS CODE             , P.DISCH_VSL AS NAME          FROM (SELECT *                   FROM TB_RND_BNDR                 WHERE DISCH_VSL IS NOT NULL) P                                      INNER JOIN (SELECT *                                                    FROM TB_BERTHPLAN B                                                   WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                             ON P.DISCH_VSL = B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ]
2025-02-28 14:43:41,806 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryRegNo] Prepared SQL: [SELECT REG_NO AS CODE, REG_NO AS NAME,               PTNR_TYPE AS VALUE1, PTNR_CODE AS VALUE2          FROM TB_PTNR]
2025-02-28 14:43:41,807 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryRegOfPayer] Prepared SQL: [SELECT DISTINCT REG_NO AS CODE, REG_NO AS NAME, PTNR_TYPE AS VALUE1, PTNR_CODE AS VALUE2,               FORE_COLOR, BACK_COLOR,               CASE WHEN NVL(PAYER_UNUSED_CHK, 'N') = 'Y' THEN 'N' ELSE 'Y' END USE_CHK          FROM TB_PTNR        WHERE REG_NO IS NOT NULL          AND PTNR_TYPE IN (SELECT CODE                              FROM TB_CODE_MASTER                              WHERE CODE_TYPE = 'PATP')]
2025-02-28 14:43:41,807 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryWagonID] Prepared SQL: [SELECT DISTINCT WAGON_ID CODE, WAGON_ID NAME          FROM TB_RAIL_WAGON         ORDER BY WAGON_ID]
2025-02-28 14:43:41,808 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryColor] Prepared SQL: [SELECT '' AS CODE              , '' AS NAME              , '' AS VALUE1              , '' AS VALUE2              , FORE_COLOR              , BACK_COLOR           FROM TB_COLOR         ORDER BY ORDER_SEQ]
2025-02-28 14:43:41,808 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryCustomerTrfCodes] Prepared SQL: [SELECT DISTINCT CUSTOMER_CODE AS CODE,              CUSTOMER_CODE AS NAME         FROM TB_GNRL_CODE        WHERE GNRL_TYPE = 'UNT'          AND CUSTOMER_CODE IS NOT NULL     ORDER BY CODE]
2025-02-28 14:43:41,809 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryIMDGLabelCode] Prepared SQL: [SELECT CODE AS CODE,               CODE_DESC AS NAME,               IMDGS AS VALUE1,               IMDG_LABEL AS BYTE1          FROM TB_IMDGLABEL]
2025-02-28 14:43:41,810 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-cfsArea] Prepared SQL: [SELECT AREA as CODE, AREA as NAME          FROM TB_AREA         WHERE AREA_USE = 'C']
2025-02-28 14:43:41,810 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-scheduleParamValues] Prepared SQL: [SELECT PARAM_ID as CODE, PARAM_DESC as NAME          FROM TB_SCHPARAM_LIST         WHERE PROC_NAME =  @param0         ORDER BY PARAM_ID]
2025-02-28 14:43:41,811 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryImdgClass] Prepared SQL: [SELECT CLASS AS CODE             , CLASS AS NAME          FROM TB_IMDGCLASS         ORDER BY CLASS]
2025-02-28 14:43:41,811 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryUNNo] Prepared SQL: [SELECT DISTINCT UNNO AS CODE             , UNNO AS NAME          FROM TB_IMDGDATA         ORDER BY CODE]
2025-02-28 14:43:41,812 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryEquNo] Prepared SQL: [SELECT DISTINCT EQU_NO AS CODE,               EQU_NO AS NAME          FROM TB_EQU         ORDER BY CODE]
2025-02-28 14:43:41,812 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryContainerRuleCode] Prepared SQL: [SELECT DISTINCT RULE_CODE AS CODE,               RULE_DESC AS NAME,               MSG AS VALUE1          FROM TB_RULE_CODE         ORDER BY RULE_CODE]
2025-02-28 14:43:41,813 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquirySSRCodeUsedInPreAdvice] Prepared SQL: [SELECT GNRL_CODE AS CODE, GNRL_NM AS NAME          FROM TB_GNRL_CODE         WHERE GNRL_TYPE = 'SSR'           AND dbo.SF_CHECK_CODE_CONTAINED(CODE_USAGE, 'PA') = 'Y']
2025-02-28 14:43:41,813 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryStaffCodes] Prepared SQL: [SELECT DISTINCT STAFF_CD AS CODE,               NVL(ENG_NM, STAFF_CD) AS NAME          FROM TB_STAFF         ORDER BY CODE]
2025-02-28 14:43:41,814 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryCfsEquNos] Prepared SQL: [SELECT DISTINCT EQU_NO AS CODE,               EQU_NO AS NAME          FROM TB_EQU         WHERE EQU_TYPE1 IN ('FL', 'RS', 'TC', 'GC')         ORDER BY CODE]
2025-02-28 14:43:41,814 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryTmnlParameters] Prepared SQL: [SELECT FUNCTION_TYPE AS type,               FUNCTION_NAME AS typename,               PARAMETER_ID AS code,               PARAMETER_VALUE AS name          FROM TB_TMNL_PARAMETER         ORDER BY FUNCTION_TYPE, FUNCTION_NAME, PARAMETER_ID ASC]
2025-02-28 14:43:41,815 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryGangId] Prepared SQL: [SELECT GANG_ID CODE, '' NAME          FROM TB_GANG_ID         ORDER BY GANG_ID]
2025-02-28 14:43:41,815 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-vvdAssignableAndStorage] Prepared SQL: [SELECT ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS CODE,               ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS NAME,               STORAGE_TYPE AS VALUE1,               CASE ATD WHEN NULL THEN 'N' ELSE 'Y' END AS VALUE2,               NULL AS FORE_COLOR, NULL AS BACK_COLOR          FROM TB_BERTHPLAN         WHERE ISNULL(STORAGE_TYPE, 'NULL') IN ('NULL', 'X', 'S')           AND ATD IS NULL           AND ISNULL(STATUS, 'NULL') <> 'C'         ORDER BY CODE]
2025-02-28 14:43:41,816 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryPileMixtureRule] Prepared SQL: [SELECT DISTINCT RULE_CD Code, RULE_DESC Name          FROM TB_PILEMIX_RULE_MASTER         ORDER BY RULE_CD]
2025-02-28 14:43:41,816 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryProductivitySettingScatteringVVD] Prepared SQL: [SELECT DISTINCT B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ CODE             , B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ NAME             , B.VSL_CD             , B.CALL_YEAR             , B.CALL_SEQ          FROM TB_VSL V             , TB_BERTHPLAN B         WHERE V.VSL_CD = B.VSL_CD           AND (B.STORAGE_TYPE <> 'S' OR B.STORAGE_TYPE IS NULL)           AND B.OUT_LANE =  @param0          ORDER BY B.VSL_CD, B.CALL_YEAR DESC, B.CALL_SEQ DESC]
2025-02-28 14:43:41,817 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryPileMixtureRuleSet] Prepared SQL: [SELECT DISTINCT RULESET_CD CODE, RULESET_DESC NAME          FROM TB_PILEMIX_RULESET_MASTER         ORDER BY RULESET_CD]
2025-02-28 14:43:41,817 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryBayRowMixtureRule] Prepared SQL: [SELECT DISTINCT RULE_CD CODE, RULE_DESC NAME          FROM TB_BAYROWMIX_RULE_MASTER         ORDER BY RULE_CD]
2025-02-28 14:43:41,818 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryEvaluationRule] Prepared SQL: [SELECT DISTINCT RULE_CD CODE, RULE_DESC NAME          FROM TB_POSEVA_MASTER         WHERE JOB_TYPE =  @param0          ORDER BY RULE_CD]
2025-02-28 14:43:41,819 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryNewPositionRule] Prepared SQL: [SELECT DISTINCT RULE_CD CODE, RULE_DESC NAME          FROM TB_POSRULE_RENEWED         ORDER BY RULE_CD]
2025-02-28 14:43:41,819 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryIxCdIXOnly] Prepared SQL: [SELECT CODE AS CODE, CODE_DESC AS NAME          FROM TB_CODE_MASTER         WHERE CODE_TYPE = 'IXCD'           AND CODE IN ('I', 'X')]
2025-02-28 14:43:41,820 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryJobmodeToCompare] Prepared SQL: [SELECT CODE AS CODE, CODE_DESC AS NAME          FROM TB_CODE_MASTER         WHERE CODE_TYPE = 'BLMD'           AND CODE = 'GAN']
2025-02-28 14:43:41,820 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryProformaScheduleTemplateID] Prepared SQL: [SELECT DISTINCT TEMPLATE_ID AS CODE, TEMPLATE_ID AS NAME          FROM TB_PROFORMA_SCH      ORDER BY TEMPLATE_ID DESC]
2025-02-28 14:43:41,821 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryBlockCodes] Prepared SQL: [SELECT BLOCK as code             , BLOCK as name             , FORE_COLOR as value1             , BACK_COLOR as value2             , FORE_COLOR as fore_color             , BACK_COLOR as back_color          FROM TB_BLOCK         ORDER BY CODE]
2025-02-28 14:43:41,824 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.select-InquiryUseDBFilter] Prepared SQL: [SELECT /* Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.select-InquiryUseDBFilter */        ISNULL(USE_DB_FILTER, 'N')        FROM  TB_TMNL_CFG]
2025-02-28 14:43:41,825 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.select-InquiryFilterNameValid] Prepared SQL: [SELECT        COUNT_BIG(PGM_CODE)        FROM        TB_FILTER_TEMPLATE        WHERE 1=1        AND PGM_CODE =  @param0         AND MENU =  @param1         AND CAST(GRID_IDX AS NVARCHAR(MAX)) =  @param2         AND FILTER_NAME =  @param3         AND CAST(SEQ AS NVARCHAR(MAX)) =  @param4         AND (FILTER_TYPE = 'C' OR (USER_ID =  @param5  AND FILTER_TYPE = 'P'))]
2025-02-28 14:43:41,825 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.select-inquiryFilterStoredItemList] Prepared SQL: [SELECT PGM_CODE, MENU        ,CAST(GRID_IDX AS NVARCHAR(MAX)) AS GRID_IDX        ,FILTER_NAME        ,CAST(SEQ AS NVARCHAR(MAX)) AS SEQ        ,FIELD, OPERATOR, VALUE, USER_ID, STAFF_CD        ,CAST(UPDATE_TIME AS NVARCHAR(MAX)) AS UPDATE_TIME        ,FILTER_TYPE        FROM        TB_FILTER_TEMPLATE        WHERE 1=1        AND PGM_CODE =  @param0         AND MENU =  @param1         AND GRID_IDX =  @param2         AND (USER_ID =  @param3  OR FILTER_TYPE = 'C')]
2025-02-28 14:43:41,828 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.insert-filterStoredItem] Prepared SQL: [INSERT        INTO        TB_FILTER_TEMPLATE        (        PGM_CODE        , MENU        , GRID_IDX        , FILTER_NAME        , SEQ        , FIELD        , OPERATOR        , VALUE        , USER_ID        , STAFF_CD        , UPDATE_TIME        , FILTER_TYPE        )        VALUES        (  @param0         , @param1         , @param2         , @param3         , @param4         , @param5         , @param6         , @param7         , @param8         , @param9         ,SYSDATETIME()        , @param10         )]
2025-02-28 14:43:41,829 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.update-filterStoredItem] Prepared SQL: [UPDATE TB_FILTER_TEMPLATE SET        STAFF_CD =  @param0         ,UPDATE_TIME = SYSDATETIME()             WHERE 1=1]
2025-02-28 14:43:41,830 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.delete-filterStoredItem] Prepared SQL: [DELETE TB_FILTER_TEMPLATE     WHERE 1=1     AND PGM_CODE =  @param0      AND MENU =  @param1      AND GRID_IDX =  @param2      AND USER_ID =  @param3      AND FILTER_NAME =  @param4]
2025-02-28 14:43:41,839 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.select-InquiryDummayColSetting] Prepared SQL: [SELECT        M.COLUMN_KEY        ,M.COLUMN_CAPTION        ,M.CODE_TYPE        ,M.CELL_TYPE        ,M.CELL_TYPE_ID        ,M.VISIBLE        ,S.BACKCOLOR        ,S.FORECOLOR        ,S.COLOR_RULE_TYPE        ,S.CELL_INPUT_TYPE        ,S.CELL_DISPLAY_TYPE        ,S.VALUE_DISPLAY_TYPE        ,S.EDITABLE        FROM TB_DUMMY_FIELD M, TB_DUMMYCOL_SCHEMA S        WHERE 1=1        AND M.COLUMN_TYPE = S.COLUMN_TYPE]
2025-02-28 14:43:41,840 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.select-InquiryUseDBColSetting] Prepared SQL: [SELECT /* Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.select-InquiryUseDBFilter */        ISNULL(USE_DB_COLUMN, 'N')        FROM  TB_TMNL_CFG]
2025-02-28 14:43:41,841 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.select-inquiryColSettingStoredItemNameList] Prepared SQL: [SELECT PGM_CODE,TEMPLATE_NAME, GRID_IDX, MENU, TEMPLATE_TYPE, ROW_HEADER_TYPE,         FROZEN_COL_COUNT,DEFAULT_CHK, DISPLAY_COLS, USER_ID, STAFF_CD,         CAST(UPDATE_TIME AS NVARCHAR(MAX)) AS UPDATE_TIME      FROM TB_COLUMN_TEMPLATE          WHERE 1=1          AND PGM_CODE      =  @param0           AND MENU          =  @param1           AND GRID_IDX      =  @param2           AND TEMPLATE_NAME =  @param3]
2025-02-28 14:43:41,842 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.insert-ColSettingStoredItem] Prepared SQL: [INSERT INTO TB_COLUMN_TEMPLATE(        PGM_CODE, MENU, GRID_IDX, TEMPLATE_NAME, DISPLAY_COLS,         DEFAULT_CHK, FROZEN_COL_COUNT, SHOW_ROW_HEADER,         ROW_HEADER_TYPE, USER_ID, STAFF_CD, UPDATE_TIME, TEMPLATE_TYPE        ) VALUES  (          @param0 ,  @param1 ,  @param2 ,  @param3 ,  @param4 ,  @param5 ,          @param6 ,  @param7 ,  @param8 ,  @param9 , @param9 ,SYSDATETIME(),           @param10         )]
2025-02-28 14:43:41,843 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-ResetColSettingStoredItemWithU] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE         SET DEFAULT_CHK = 'N'        WHERE 1=1          AND PGM_CODE  =  @param0           AND MENU      =  @param1           AND GRID_IDX  =  @param2           AND USER_ID   =  @param3           AND TEMPLATE_TYPE = 'U']
2025-02-28 14:43:41,844 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-SetColSettingStoredItemWithU] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE         SET DEFAULT_CHK = 'Y'        WHERE 1=1           AND PGM_CODE      =  @param0           AND MENU          =  @param1           AND GRID_IDX      =  @param2           AND TEMPLATE_NAME =  @param3]
2025-02-28 14:43:41,844 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-SetColSettingStoredItemWithG] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE         SET DEFAULT_CHK = 'Y'        WHERE 1=1          AND PGM_CODE      =  @param0           AND MENU          =  @param1           AND GRID_IDX      =  @param2           AND TEMPLATE_NAME =  @param3]
2025-02-28 14:43:41,845 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-ResetColSettingStoredItemWithA] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE         SET DEFAULT_CHK = 'N'        WHERE 1=1          AND PGM_CODE =  @param0           AND MENU     =  @param1           AND GRID_IDX =  @param2            AND             ((TEMPLATE_TYPE = 'U'AND USER_ID =  @param3 )             OR (TEMPLATE_TYPE = 'G'                  AND USER_ID IN                 (SELECT STAFF_CD FROM TB_STAFF                   WHERE 1=1                     AND                     USER_GROUP =  @param4 ))             OR (TEMPLATE_TYPE = 'A'))]
2025-02-28 14:43:41,845 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-SetColSettingStoredItemWithA] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE        SET DEFAULT_CHK = 'Y'        WHERE 1=1          AND PGM_CODE      =  @param0           AND MENU          =  @param1           AND GRID_IDX      =  @param2           AND TEMPLATE_NAME =  @param3]
2025-02-28 14:43:41,846 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-SetColSettingStoredItem] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE         SET UPDATE_TIME     = SYSDATETIME()        , DISPLAY_COLS      =  @param0         , FROZEN_COL_COUNT  =  @param1         , SHOW_ROW_HEADER   =  @param2         , ROW_HEADER_TYPE   =  @param3         , STAFF_CD =  @param4         WHERE 1=1          AND PGM_CODE      =  @param5           AND MENU          =  @param6           AND GRID_IDX      =  @param7           AND TEMPLATE_NAME =  @param8]
2025-02-28 14:43:41,847 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.delete-ColSettingStoredItem] Prepared SQL: [DELETE TB_COLUMN_TEMPLATE        WHERE 1=1          AND PGM_CODE      =  @param0           AND MENU          =  @param1           AND GRID_IDX      =  @param2           AND TEMPLATE_NAME =  @param3]
2025-02-28 14:43:41,858 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.MainMap.update-remarkWeightInfo] Prepared SQL: [UPDATE TMT_WEIGHTBRIDGE               SET RMK =  @param0                WHERE                  VSL_CALL_ID  =  @param1                    AND LORRY_NO =  @param2                    AND (        (BL_NO =  @param3  AND SDO_NO =  @param4 )         OR         (SHIPG_NOTE_NO =  @param5  AND GR_NO =  @param6 )       );]
2025-02-28 14:43:41,859 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.MainMap.update-printCount] Prepared SQL: [UPDATE TMT_WEIGHTBRIDGE     SET PRN_CNT =  ISNULL(PRN_CNT, 0)  + 1     WHERE 1= 1     AND TRANSACTION_NO =  @param0]
2025-02-28 14:43:41,860 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.MainMap.update-statusCanCelJobWeightBridge] Prepared SQL: [UPDATE TMT_WEIGHTBRIDGE     SET STATUS   =  @param0      WHERE     TRANSACTION_NO =  @param1]
2025-02-28 14:43:41,868 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.WeightBridgeMap.select-transactionNo] Prepared SQL: [SELECT     FORMAT(GETDATE(),'yyyyMMdd') + RIGHT(REPLICATE('0',5) + FORMAT(CONVERT(BIGINT, ISNULL(MAX(SUBSTRING(TRANSACTION_NO,9,5)),0)) + 1,''),5) TRANSACTION_NO     FROM TMT_WEIGHTBRIDGE     WHERE TRANSACTION_NO LIKE FORMAT(GETDATE(),'yyyyMMdd') + '%']
2025-02-28 14:43:41,870 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.WeightBridgeMap.insert-weightBridge] Prepared SQL: [INSERT INTO TMT_WEIGHTBRIDGE     (TRANSACTION_NO     ,GATE_TICKET_NO     ,TRANSACTION_DT     ,VSL_CALL_ID     ,VSL_CD     ,CALL_YEAR     ,CALL_SEQ     ,MF_DOC_ID     ,SHIPG_NOTE_NO     ,GR_NO     ,BL_NO     ,DO_NO     ,SDO_NO     ,UNIT_NO     ,DELV_TP_CD     ,FWRD     ,CNSNE     ,SHPR     ,GP_NO     ,TSPT_COMP     ,LORRY_NO     ,DRIVER_ID     ,CHASSIS_NO     ,TRK_MODE     ,FIRST_WGT     ,SECOND_WGT     ,BAG_WGT     ,PKG_QTY     ,CG_VOL     ,TRK_GRS_WGT     ,TRK_TRE_WGT     ,TRK_NET_WGT     ,GATEIN_DT     ,GATEIN_CD     ,GATEOUT_DT     ,GATEOUT_CD     ,TO_LOCATION     ,PRN_CNT     ,RMK     ,RHDL_MODE     ,STAFF_CD     ,UPDATE_TIME     ,FIRST_WGT_DT     ,SECOND_WGT_DT     ,STATUS)     VALUES     ( @param0      , @param1      , @param2      , @param3      , @param4      , @param5      , @param6      , @param7      , @param8      , @param9      , @param10      , @param11      , @param12      , @param13      , @param14      , @param15      , @param16      , @param17      , @param18      , @param19      , @param20      , @param21      , @param22      , @param23      , @param24      , @param25      , @param26      , @param27      , @param28      , @param29      , @param30      , @param31      , @param32      , @param33      , @param34      , @param35      , @param36      , @param37      , @param38      , @param39      , @param40      , @param41      , @param42      , @param43      , @param44 )]
2025-02-28 14:43:41,871 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.WeightBridgeMap.update-weightBridge] Prepared SQL: [UPDATE TMT_WEIGHTBRIDGE     SET RMK             =  @param0 ,     SECOND_WGT      =  @param1 ,     SECOND_WGT_DT   =  @param2 ,     UPDATE_TIME     =  @param3 ,     STAFF_CD        =  @param4 ,     TRK_GRS_WGT     =  @param5 ,     TRK_TRE_WGT     =  @param6 ,     TRK_NET_WGT     =  @param7 ,     DELV_TP_CD      =  @param8 ,     CNSNE           =  @param9 ,     SHPR            =  @param10 ,     STATUS   =  @param11      WHERE     TRANSACTION_NO =  @param12]
2025-02-28 14:43:41,880 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalMap.select-terminal] Prepared SQL: [SELECT T.TMNL_CD, T.TMNL_NM, T.PORT, T.MAXTEU_TRUCK, T.LENGTH, T.HEIGHT,           T.EXT_X, T.EXT_Y, C.UN_SEGREGATION_CHK, C.EM_CHR, ISNULL(C.STRG_VSL,'STRG') AS STRG_VSL,           C.LAYOUT_AXIS, C.BERTH_DIR, C.QCCOVERAGE_BY_BITT, C.USE_YSLOT_USAGE         FROM TB_TMNL T, TB_TMNL_CFG C        WHERE T.TMNL_CD = C.TMNL_CD]
2025-02-28 14:43:41,881 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalMap.update-terminal] Prepared SQL: [UPDATE  /* Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalMap.update-terminal */              TB_TMNL          SET              TMNL_CD =  @param0 ,              TMNL_NM =  @param1 ,              PORT =  @param2 ,              MAXTEU_TRUCK =  @param3 ,              LENGTH =  @param4 ,              HEIGHT =  @param5 ,              EXT_X =  @param6 ,              EXT_Y =  @param7 ,              STAFF_CD =  @param8 ,              UPDATE_TIME = SYSDATETIME()]
2025-02-28 14:43:41,882 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalMap.update-terminalcfg] Prepared SQL: [UPDATE              TB_TMNL_CFG          SET              UN_SEGREGATION_CHK =  @param0 ,              STAFF_CD =  @param1 ,              UPDATE_TIME = SYSDATETIME()]
2025-02-28 14:43:41,887 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalCapacityMap.insert-terminalCapacity] Prepared SQL: [INSERT INTO TB_TMNL_CAP        (TMNL_CD, WK_IM_F, WK_EX_F, WK_F, TL_IM_F,        TL_EX_F, TL_F, WK_VP_E, WK_EY_E, WK_E,        TL_VP_E, TL_EY_E, TL_E, TL_ST_F, ST_IM_F,        ST_EX_F, ST_RF_F, ST_SF_F, ST_US_F, ST_IP_F,        TL_ST_E, ST_CL_E, ST_WC_E, ST_RP_E, ST_WR_E,        ST_PT_E, ST_AV_E, WK_PG_F, WK_PG_E, REMARK,        STAFF_CD, UPDATE_TIME        ) VALUES (         @param0 ,  @param1 ,  @param2 ,  @param3 ,  @param4 ,         @param5 ,  @param6 ,  @param7 ,  @param8 ,  @param9 ,         @param10 ,  @param11 ,  @param12 ,  @param13 ,  @param14 ,         @param15 ,  @param16 ,  @param17 ,  @param18 ,  @param19 ,         @param20 ,  @param21 ,  @param22 ,  @param23 ,  @param24 ,         @param25 ,  @param26 ,  @param27 ,  @param28 ,  @param29 ,         @param30 , SYSDATETIME())]
2025-02-28 14:43:41,889 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalCapacityMap.update-terminalCapacity] Prepared SQL: [UPDATE  /* Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalCapacityMap.update-terminalCapacity */        TB_TMNL_CAP        SET        TMNL_CD =  @param0 ,        WK_IM_F =  @param1 ,        WK_EX_F =  @param2 ,        WK_F =  @param3 ,        TL_IM_F =  @param4 ,        TL_EX_F=  @param5 ,        TL_F =  @param6 ,        WK_VP_E =  @param7 ,        WK_EY_E =  @param8 ,        WK_E =  @param9 ,        TL_VP_E =  @param10 ,        TL_EY_E =  @param11 ,        TL_E =  @param12 ,        TL_ST_F =  @param13 ,        ST_IM_F =  @param14 ,        ST_EX_F =  @param15 ,        ST_RF_F =  @param16 ,        ST_SF_F =  @param17 ,        ST_US_F =  @param18 ,        ST_IP_F =  @param19 ,        TL_ST_E =  @param20 ,        ST_CL_E =  @param21 ,        ST_WC_E =  @param22 ,        ST_RP_E =  @param23 ,        ST_WR_E =  @param24 ,        ST_PT_E =  @param25 ,        ST_AV_E =  @param26 ,        WK_PG_F =  @param27 ,        WK_PG_E =  @param28 ,        REMARK =  @param29 ,        STAFF_CD =  @param30 ,        UPDATE_TIME = SYSDATETIME()        WHERE TMNL_CD =  @param0]
2025-02-28 14:43:41,892 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.TPrintInfoStoreGeneralMap.select-ExcelImport] Prepared SQL: [SELECT            PGM_CODE            ,MENU            ,GRID_NAME            ,TEMPLATE_NAME            ,COLUMN_NAME            ,GRID_COLUMN_KEY            ,COLUMN_SEQ            ,STAFF_CD            ,HEADER_ROW            ,TO_CHAR(UPDATE_TIME) as UPDATE_TIME            FROM  TB_IMPORTFILE_TEMPLATE            WHERE 1=1            AND PGM_CODE =  @param0             AND MENU     =  @param1             AND GRID_NAME =  @param2]
2025-02-28 14:43:41,893 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.TPrintInfoStoreGeneralMap.insert-ExcelImportItem] Prepared SQL: [INSERT INTO TB_IMPORTFILE_TEMPLATE(            PGM_CODE, MENU, TEMPLATE_NAME, GRID_COLUMN_KEY, COLUMN_NAME,            COLUMN_SEQ, GRID_NAME, STAFF_CD, HEADER_ROW, UPDATE_TIME            ) VALUES  (             @param0 ,  @param1 ,  @param2 ,  @param3 ,  @param4 ,             @param5 ,  @param6 ,  @param7 ,  @param8 , SYSDATE            )]
2025-02-28 14:43:41,894 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.TPrintInfoStoreGeneralMap.update-ExcelImportItem] Prepared SQL: [UPDATE TB_IMPORTFILE_TEMPLATE            SET UPDATE_TIME      = SYSDATE            , COLUMN_SEQ         =  @param0             , COLUMN_NAME        =  @param1             , HEADER_ROW         =  @param2             WHERE 1=1            AND PGM_CODE         =  @param3             AND MENU             =  @param4             AND TEMPLATE_NAME    =  @param5             AND GRID_COLUMN_KEY  =  @param6             AND GRID_NAME        =  @param7]
2025-02-28 14:43:41,895 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.TPrintInfoStoreGeneralMap.delete-ExcelImportItem] Prepared SQL: [Delete TB_IMPORTFILE_TEMPLATE            WHERE 1=1              AND PGM_CODE        =  @param0               AND MENU            =  @param1               AND TEMPLATE_NAME   =  @param2               AND COLUMN_SEQ      =  @param3               AND GRID_NAME       =  @param4               AND GRID_COLUMN_KEY =  @param5               AND COLUMN_NAME     =  @param6]
2025-02-28 14:43:41,899 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.Popup.Map.TruckListPopupMap.select-LorryList] Prepared SQL: [/* Formatted on 7/23/2024 4:29:03 PM (QP5 v5.252.13127.32867) */      WITH TRANSPORT_INFO           AS (SELECT *                 FROM TMT_ASSIGN_TRANSPORT                WHERE LORRY_NO LIKE '%' +  @param0  + '%'),           LORRY_PTNR_INFO           AS (SELECT PTNR_CD, LORRY_NO                 FROM TMT_TRUCK_MST                      JOIN TMT_PTNR PTNR ON TMT_TRUCK_MST.PTNR_CD = PTNR.PTNR_CODE                WHERE PTNR.PTNR_TYPE = 'TRK')      SELECT dbo.F_GET_PTNR_SNM (BL.CNSNE) AS BL_CNSNE_NM,             dbo.F_GET_PTNR_SNM (BL.SHPR) AS BL_SHIPPER_NM,             dbo.F_GET_PTNR_SNM (SN.CNSNE) AS SN_CNSNE_NM,             dbo.F_GET_PTNR_SNM (SN.SHPR) AS SN_SHIPPER_NM,             dbo.F_GET_PTNR_SNM (LORRY_PTNR_INFO.PTNR_CD) AS TRST_NM,             LORRY_PTNR_INFO.PTNR_CD AS TSPT_COMP,             BL.CNSNE AS BL_CNSNE_CD,             BL.SHPR AS BL_SHIPPER_CD,             SN.CNSNE AS SN_CNSNE_CD,             SN.SHPR AS SN_SHIPPER_CD,             TRANSPORT_INFO.VSL_CALL_ID,             TRANSPORT_INFO.VSL_CD,             TRANSPORT_INFO.CALL_YEAR,             TRANSPORT_INFO.CALL_SEQ,             TRANSPORT_INFO.LORRY_NO,             TRANSPORT_INFO.DRIVER_ID,             TRANSPORT_INFO.CHASSIS_NO,             TRANSPORT_INFO.BL_NO,             TRANSPORT_INFO.DO_NO,             TRANSPORT_INFO.SDO_NO,             TRANSPORT_INFO.SHIPG_NOTE_NO,             TRANSPORT_INFO.GR_NO,             TRANSPORT_INFO.TRUCK_MODE,             TRANSPORT_INFO.QR_CD,                           CASE                WHEN BL.BL_NO IS NOT NULL THEN BL.MF_DOC_ID                WHEN SN.SHIPG_NOTE_NO IS NOT NULL THEN SN.MF_DOC_ID             END                AS MF_DOC_ID,             GT.GATE_IN_DT,             GT.GATE_CD,             GT.GATE_OUT_DT,             GT.GATE_CD_OUT,             GT.CG_NO,             GT.GATE_TXN_NO,             GT.PKG_QTY,             GT.CG_VOL,             WB.FIRST_WGT,             WB.SECOND_WGT,             WB.TRK_NET_WGT,             WB.RMK,             WB.TRANSACTION_NO,             WB.TRANSACTION_DT,       WB.STATUS,             CMDT.CMDT_DESC,             CASE                WHEN BL.CATG_CD = 'I' OR SN.CATG_CD = 'I' THEN 'Import'                WHEN BL.CATG_CD = 'E' OR SN.CATG_CD = 'E' THEN 'Export'             END                AS CATEGORY,             CASE                WHEN WB.DELV_TP_CD IS NOT NULL THEN WB.DELV_TP_CD                WHEN BL.BL_NO IS NOT NULL THEN BL.DELV_TP_CD                WHEN SN.SHIPG_NOTE_NO IS NOT NULL THEN SN.DELV_TP_CD             END                AS DELV_TP_CD,             CASE                WHEN BL.BL_NO IS NOT NULL THEN BL.BL_NO                WHEN SN.SHIPG_NOTE_NO IS NOT NULL THEN SN.SHIPG_NOTE_NO             END                AS BL_SN,             CASE                WHEN TRANSPORT_INFO.SDO_NO IS NOT NULL THEN TRANSPORT_INFO.SDO_NO                WHEN TRANSPORT_INFO.GR_NO IS NOT NULL THEN TRANSPORT_INFO.GR_NO             END                AS SDO_GR,             CASE                WHEN BL.BL_NO IS NOT NULL AND TRANSPORT_INFO.SDO_NO IS NOT NULL                THEN                   dbo.F_GET_PTNR_SNM (BL.CNSNE)                WHEN     SN.SHIPG_NOTE_NO IS NOT NULL                     AND TRANSPORT_INFO.GR_NO IS NOT NULL                THEN                   dbo.F_GET_PTNR_SNM (SN.SHPR)             END                AS CNSN_SHPR,             CASE                WHEN WB.PRN_CNT IS NULL OR WB.PRN_CNT = 0 THEN 'No'                ELSE 'Yes'             END                AS PRINT_CIR        FROM TRANSPORT_INFO             LEFT JOIN TMT_BL                                                AS BL                ON     TRANSPORT_INFO.BL_NO = BL.BL_NO                   AND TRANSPORT_INFO.VSL_CALL_ID = BL.VSL_CALL_ID             LEFT JOIN TMT_SHIPG_NOTE                                        AS SN                ON     TRANSPORT_INFO.SHIPG_NOTE_NO = SN.SHIPG_NOTE_NO                   AND TRANSPORT_INFO.VSL_CALL_ID = SN.VSL_CALL_ID             LEFT JOIN LORRY_PTNR_INFO                ON     LORRY_PTNR_INFO.LORRY_NO = TRANSPORT_INFO.LORRY_NO                          AND (           (TRANSPORT_INFO.TRANSPORT = LORRY_PTNR_INFO.PTNR_CD )           OR          (TRANSPORT_INFO.TRANSPORT like ''+ LORRY_PTNR_INFO.PTNR_CD +'[,]%' )           OR          (TRANSPORT_INFO.TRANSPORT like  +'%[,]'+ LORRY_PTNR_INFO.PTNR_CD +'[,]%'  )           OR            (TRANSPORT_INFO.TRANSPORT like  + '%[,]'+ LORRY_PTNR_INFO.PTNR_CD  +'' )            )                    LEFT JOIN TMT_CMDT CMDT                ON CMDT.CMDT_CD = BL.CMDT_CD AND CMDT.CMDT_GRP_CD = BL.CMDT_GRP_CD             LEFT OUTER JOIN TMT_CG_ARRV_DELV GT                ON     TRANSPORT_INFO.VSL_CALL_ID = GT.VSL_CALL_ID                   AND TRANSPORT_INFO.LORRY_NO = GT.LORRY_NO                   AND (   (    TRANSPORT_INFO.SDO_NO IS NOT NULL                            AND TRANSPORT_INFO.SDO_NO = GT.SDO_NO                            AND TRANSPORT_INFO.BL_NO = GT.CG_NO)                        OR (    TRANSPORT_INFO.GR_NO IS NOT NULL                            AND TRANSPORT_INFO.GR_NO = GT.GR_NO))             LEFT JOIN TMT_WEIGHTBRIDGE                                      AS WB                ON     (   (  COALESCE (TRANSPORT_INFO.BL_NO, '') != ''                              AND TRANSPORT_INFO.BL_NO = WB.BL_NO                               AND COALESCE (TRANSPORT_INFO.SDO_NO, '') = COALESCE (WB.SDO_NO, ''))                        OR (  COALESCE (TRANSPORT_INFO.SHIPG_NOTE_NO, '') != ''                              AND TRANSPORT_INFO.SHIPG_NOTE_NO = WB.SHIPG_NOTE_NO                               AND COALESCE (TRANSPORT_INFO.GR_NO, '') = COALESCE (WB.GR_NO, '')))                   AND TRANSPORT_INFO.LORRY_NO = WB.LORRY_NO                   AND TRANSPORT_INFO.VSL_CALL_ID = WB.VSL_CALL_ID                   AND COALESCE (WB.GATE_TICKET_NO, '') =  COALESCE (GT.GATE_TXN_NO, '')       AND WB.SECOND_WGT IS NULL                  AND COALESCE (WB.STATUS, 'N')  NOT IN ('C', 'Y')       WHERE     1 = 1]
2025-02-28 14:43:41,914 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo] PreparedStatement : [SELECT  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo*/     USER_ID as STAFF_CD,     '' as USE_APP,     '' as DEPT_CD,     GRD_CD as USER_GROUP,     TMNL_CODE as TMNL_ID,     PASSWORD as PASSWORD,     ENG_NM as ENG_NM ,     PWD_DATE as PWDCHANGE_TIME,     SYSDATETIME() AS TODAY,     PWD_INTERVAL as PWD_INTERVAL ,     '0' as RETRY,     'N' as  ADMIN,     USER_LEVEL as USER_LEVEL ,     'N' as  EXPIRE   ,      DATEDIFF("MM", LAST_LOGIN, SYSDATETIME()) AS DAYS_AFTER_LAST_LOGIN,     LCL_NM as LCL_NM,     LAST_LOGIN as LASTLOGIN_TIME     FROM    TMT_USER_INFO     WHERE   1=1     AND USER_ID =  @param0]
2025-02-28 14:43:41,920 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo] Parameters: [@param0=[UserID,HUYADMIN]]
2025-02-28 14:43:41,920 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo] Types: [@param0=[String, System.String]]
2025-02-28 14:43:42,612 [Module.exe] DEBUG - Open Connection "62331491" to "Microsoft SQL Server, provider V2.0.0.0 in framework .NET V2.0".
2025-02-28 14:43:42,905 [Module.exe] DEBUG - Close Connection "62331491" to "Microsoft SQL Server, provider V2.0.0.0 in framework .NET V2.0".
2025-02-28 14:43:43,084 [Module.exe] DEBUG - Create MenuXmlUtil menuXmlFileWithPath E:\Levi\CSharp\MOST_MMC_WB-main\Tsb-Product-WB\Tsb.Product.WB.Client\bin\Debug\Environment\ProductWB\MenuItem.xml
2025-02-28 14:43:43,493 [Module.exe] ERROR - [FT.Win] Value cannot be null.
Parameter name: source /+/    at System.Linq.Enumerable.Where[TSource](IEnumerable`1 source, Func`2 predicate)
   at Tsb.Fontos.Win.Menu.Authority.MenuAuthorityUtil.IsMenuAuthority(ITMenuProperty menuProperty) in E:\Levi\CSharp\FONTOS_Installation\FONTOS\Tsb-Fontos-Framework\MAIN\2.0-Std-Main\Tsb-Fontos-Framework\Tsb.Fontos.Win\Menu\Authority\MenuAuthorityUtil.cs:line 126
2025-02-28 14:43:43,513 [Module.exe] ERROR - [FT.Win] Value cannot be null.
Parameter name: source /+/    at System.Linq.Enumerable.Where[TSource](IEnumerable`1 source, Func`2 predicate)
   at Tsb.Fontos.Win.Menu.Authority.MenuAuthorityUtil.IsMenuAuthority(ITMenuProperty menuProperty) in E:\Levi\CSharp\FONTOS_Installation\FONTOS\Tsb-Fontos-Framework\MAIN\2.0-Std-Main\Tsb-Fontos-Framework\Tsb.Fontos.Win\Menu\Authority\MenuAuthorityUtil.cs:line 126
2025-02-28 14:43:48,065 [Module.exe] INFO  - [FT.Core] The log deletion function is disabled.
2025-02-28 14:44:06,103 [Module.exe] INFO  - [FT.Win] Do you want to exit the program?
2025-02-28 14:44:08,313 [Module.exe] INFO  - Do you want to exit the program? [Dialog Result : OK]
2025-02-28 14:44:08,510 [Module.exe] ERROR - [FT.Win] Value cannot be null.
Parameter name: source /+/    at System.Linq.Enumerable.Where[TSource](IEnumerable`1 source, Func`2 predicate)
   at Tsb.Fontos.Win.Menu.Toolbar.ToolbarMenuWorker.HasAuthorityToToolbar(BaseTemplateInterface view, ToolbarAttributeItem toolbarItem, Boolean useAuthority) in E:\Levi\CSharp\FONTOS_Installation\FONTOS\Tsb-Fontos-Framework\MAIN\2.0-Std-Main\Tsb-Fontos-Framework\Tsb.Fontos.Win\Menu\Toolbar\ToolbarMenuWorker.cs:line 461
2025-02-28 14:44:08,532 [Module.exe] ERROR - [FT.Win] Value cannot be null.
Parameter name: source /+/    at System.Linq.Enumerable.Where[TSource](IEnumerable`1 source, Func`2 predicate)
   at Tsb.Fontos.Win.Menu.Toolbar.ToolbarMenuWorker.HasAuthorityToToolbar(BaseTemplateInterface view, ToolbarAttributeItem toolbarItem, Boolean useAuthority) in E:\Levi\CSharp\FONTOS_Installation\FONTOS\Tsb-Fontos-Framework\MAIN\2.0-Std-Main\Tsb-Fontos-Framework\Tsb.Fontos.Win\Menu\Toolbar\ToolbarMenuWorker.cs:line 461
2025-02-28 14:44:08,551 [Module.exe] ERROR - [FT.Win] Value cannot be null.
Parameter name: source /+/    at System.Linq.Enumerable.Where[TSource](IEnumerable`1 source, Func`2 predicate)
   at Tsb.Fontos.Win.Menu.Toolbar.ToolbarMenuWorker.HasAuthorityToToolbar(BaseTemplateInterface view, ToolbarAttributeItem toolbarItem, Boolean useAuthority) in E:\Levi\CSharp\FONTOS_Installation\FONTOS\Tsb-Fontos-Framework\MAIN\2.0-Std-Main\Tsb-Fontos-Framework\Tsb.Fontos.Win\Menu\Toolbar\ToolbarMenuWorker.cs:line 461
2025-02-28 14:44:08,571 [Module.exe] ERROR - [FT.Win] Value cannot be null.
Parameter name: source /+/    at System.Linq.Enumerable.Where[TSource](IEnumerable`1 source, Func`2 predicate)
   at Tsb.Fontos.Win.Menu.Toolbar.ToolbarMenuWorker.HasAuthorityToToolbar(BaseTemplateInterface view, ToolbarAttributeItem toolbarItem, Boolean useAuthority) in E:\Levi\CSharp\FONTOS_Installation\FONTOS\Tsb-Fontos-Framework\MAIN\2.0-Std-Main\Tsb-Fontos-Framework\Tsb.Fontos.Win\Menu\Toolbar\ToolbarMenuWorker.cs:line 461
2025-02-28 14:44:08,593 [Module.exe] ERROR - [FT.Win] Value cannot be null.
Parameter name: source /+/    at System.Linq.Enumerable.Where[TSource](IEnumerable`1 source, Func`2 predicate)
   at Tsb.Fontos.Win.Menu.Toolbar.ToolbarMenuWorker.HasAuthorityToToolbar(BaseTemplateInterface view, ToolbarAttributeItem toolbarItem, Boolean useAuthority) in E:\Levi\CSharp\FONTOS_Installation\FONTOS\Tsb-Fontos-Framework\MAIN\2.0-Std-Main\Tsb-Fontos-Framework\Tsb.Fontos.Win\Menu\Toolbar\ToolbarMenuWorker.cs:line 461
2025-02-28 14:44:08,595 [Module.exe] INFO  - [FT.Win] The main application is closed.
2025-02-28 14:47:58,840 [Module.exe] INFO  - [FT.Win] The main application is Initialized. (Version 1.0.0.0)
2025-02-28 14:48:00,425 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryExpirationPolicy] Prepared SQL: [SELECT /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryExpirationPolicy*/     EXPIRE_LOGIN,     EXPIRE_TERM,     EXPIRE_RETRY,     7 as WARN_TERM     FROM  TB_TMNL_CFG]
2025-02-28 14:48:00,443 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo] Prepared SQL: [SELECT  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo*/     USER_ID as STAFF_CD,     '' as USE_APP,     '' as DEPT_CD,     GRD_CD as USER_GROUP,     TMNL_CODE as TMNL_ID,     PASSWORD as PASSWORD,     ENG_NM as ENG_NM ,     PWD_DATE as PWDCHANGE_TIME,     SYSDATETIME() AS TODAY,     PWD_INTERVAL as PWD_INTERVAL ,     '0' as RETRY,     'N' as  ADMIN,     USER_LEVEL as USER_LEVEL ,     'N' as  EXPIRE   ,      DATEDIFF("MM", LAST_LOGIN, SYSDATETIME()) AS DAYS_AFTER_LAST_LOGIN,     LCL_NM as LCL_NM,     LAST_LOGIN as LASTLOGIN_TIME     FROM    TMT_USER_INFO     WHERE   1=1     AND USER_ID =  @param0]
2025-02-28 14:48:00,444 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfoByRfidTag] Prepared SQL: [SELECT  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfoByRfidTag*/     STAFF_CD,     USE_APP,     DEPT_CD,     USER_GROUP,     TMNL_ID,     PASSWORD,     ENG_NM,     PWDCHANGE_TIME,     SYSDATE AS TODAY,     PWD_INTERVAL,     RETRY,     NVL (ADMIN, 'N') AS ADMIN,     USER_LEVEL,     EXPIRE,     TRUNC(TO_DATE (SYSDATE) - TO_DATE (LASTLOGIN_TIME)) AS DAYS_AFTER_LAST_LOGIN,     LCL_NM,     LASTLOGIN_TIME,     SIGNATURE     FROM    TB_STAFF     WHERE   1=1     AND RFID_TAG =  @param0]
2025-02-28 14:48:00,445 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryIpAccessList] Prepared SQL: [SELECT IP_ADDR, USER_LEVEL, USER_ID, USER_TYPE     FROM TB_IPADDR_ACCESS     WHERE 1 = 1     AND IP_ADDR =  @param0]
2025-02-28 14:48:00,446 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryModuleAccessRight] Prepared SQL: [SELECT  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryModuleAccessRight*/     USER_TYPE,     PGM_CODE,     USE_CHK     FROM    TB_APP_ACCESS     WHERE   1=1     AND   USER_TYPE =  @param0      AND   USER_ID   =  @param1      AND   PGM_CODE  =  @param2]
2025-02-28 14:48:00,450 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryMenuInfos] Prepared SQL: [SELECT  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryMenuInfos*/     SUBMENU      AS SUBMENU,     FORM_NAME    AS FORM_NAME,     FORM_CAPTION AS FORM_CAPTION,     TOP_MENU     AS TOPMENU     FROM         TB_BASIC_DEFINE     WHERE        PGM_CODE =  @param0      AND        ENABLE = 'Y']
2025-02-28 14:48:00,452 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateStaffAsExpired] Prepared SQL: [UPDATE /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateStaffAsExpired*/     TB_STAFF     SET     EXPIRE = 'Y',     UPDATE_TIME = SYSDATETIME()     WHERE  1=1     AND  STAFF_CD =  @param0]
2025-02-28 14:48:00,453 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateWrongPwdRetry] Prepared SQL: [UPDATE /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateWrongPwdRetry*/     TB_STAFF     SET     RETRY = (CASE WHEN RETRY = 9 THEN 8 ELSE RETRY END  + 1)     WHERE  1=1     AND  STAFF_CD =  @param0]
2025-02-28 14:48:00,454 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateLoginSuccess] Prepared SQL: [UPDATE  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateLoginSuccess*/     TB_STAFF     SET     RETRY = 0,     LASTLOGIN_TIME = SYSDATETIME()     WHERE   1=1     AND STAFF_CD =  @param0]
2025-02-28 14:48:00,454 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateUserPassword] Prepared SQL: [UPDATE  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.update-UpdateUserPassword*/     TB_STAFF     SET     PASSWORD       =  @param0 ,     PWDCHANGE_TIME = SYSDATETIME(),     UPDATE_TIME    = SYSDATETIME()     WHERE   1=1     AND STAFF_CD =   @param1]
2025-02-28 14:48:00,463 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryEquType] Prepared SQL: [SELECT DISTINCT EQU_TYPE1 AS CODE, EQU_TYPE1 AS NAME        FROM TB_EQU        ORDER BY EQU_TYPE1]
2025-02-28 14:48:00,464 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryEquCover] Prepared SQL: [SELECT DISTINCT E.EQU_NO AS CODE, E.EQU_NO AS NAME        FROM TB_EQU E, TB_EQU_COVER C        WHERE E.EQU_NO = C.EQU_NO        AND E.EQU_TYPE1 != 'YT'        AND C.BLOCK =  @param0         ORDER BY E.EQU_NO]
2025-02-28 14:48:00,465 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryShiftTimeNo] Prepared SQL: [SELECT NO AS CODE, NO AS NAME, SUBSTRING(ISNULL(S_TIME,''), 1, 2) + ':' + SUBSTRING(ISNULL(S_TIME,''), 3, 2) + ':00' AS VALUE1,        CONVERT(VARCHAR ,DATEADD(SS, -1, CAST(CONCAT(SUBSTRING(RIGHT ('00' + ISNULL(        CONVERT(VARCHAR, CASE WHEN E_TIME >= 2400 THEN E_TIME - 2400 ELSE E_TIME END),''),4), 1, 2),        ':', SUBSTRING(ISNULL(E_TIME,''), 3, 2), ':00') AS TIME))) VALUE2,        HOUR_CODE AS VALUE3, NULL AS VALUE4, NULL AS VALUE5, NULL AS FORE_COLOR, NULL AS BACK_COLOR        FROM TB_SHIFT        ORDER BY NO]
2025-02-28 14:48:00,465 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryShiftTime] Prepared SQL: [SELECT NO AS CODE,                SUBSTRING(S_TIME, 1, 2) + '/' + SUBSTRING(E_TIME, 1, 2) AS NAME,               s_time || '00' AS VALUE1,                SUBSTRING(REPLACE(CONVERT(VARCHAR, DATEADD(SS, -1, CAST(CONCAT(SUBSTRING(RIGHT('00' + ISNULL(CONVERT(VARCHAR,                                                                                                                     CASE WHEN E_TIME >= 2400 THEN E_TIME - 2400                                                                                                                          ELSE E_TIME                                                                                                                     END),'')                                                                                              ,4), 1, 2),                                                                               ':', SUBSTRING(ISNULL(E_TIME,''), 3, 2),                                                                        ':00') AS TIME)                                                          )                                         ),                                  ':', ''),                          1, 6)  AS VALUE2,               SUBSTRING(s_time, 1, 2) || ':' || SUBSTRING(s_time, 3, 2) || '-' || SUBSTRING(e_time, 1, 2) || ':' || SUBSTRING(e_time, 3, 2) AS VALUE3          FROM TB_SHIFT         ORDER BY NO]
2025-02-28 14:48:00,467 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryCurrencyUnit] Prepared SQL: [SELECT  DISTINCT /* Codes-CodeGeneralMap.select_InquiryCurrencyUnit */        CONFIG_VALUE AS CODE, CONFIG_VALUE AS NAME FROM TB_CONFIGURATION WHERE CONFIG_ID = 'BL_TMNL_CURRENCY'        UNION        SELECT GNRL_CODE AS CODE, GNRL_CODE AS NAME FROM TB_GNRL_CODE WHERE GNRL_TYPE ='CUR']
2025-02-28 14:48:00,467 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGeneralGroup] Prepared SQL: [SELECT  DISTINCT /* Codes-CodeGeneralMap.select_InquiryGeneralGroup */        GNRL_CODE     AS CODE,        GNRL_NM       AS NAME,        CODE_GROUP    AS VALUE1        FROM    TB_GNRL_CODE        WHERE   1=1        AND     GNRL_TYPE =  @param0]
2025-02-28 14:48:00,467 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGeneralRate] Prepared SQL: [SELECT  DISTINCT /* Codes-CodeGeneralMap.select_InquiryGeneralRate */        GNRL_CODE      AS CODE,        GNRL_NM        AS NAME,        CAST(RATE AS NVARCHAR(MAX))  AS VALUE1        FROM    TB_GNRL_CODE        WHERE   1=1        AND     GNRL_TYPE =  @param0]
2025-02-28 14:48:00,468 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGeneralServiceShiftChk] Prepared SQL: [SELECT GNRL_CODE as code,                 GNRL_NM as name,               GNRL_TYPE as type,                      '' as typename,              FORE_COLOR as fore_color,              BACK_COLOR as back_color,          DEFAULT_SELECT,              CODE_GROUP,       SERVICE_SHIFT_CHK as value1          FROM TB_GNRL_CODE         WHERE 1=1           AND GNRL_TYPE =  @param0       ORDER BY GNRL_CODE]
2025-02-28 14:48:00,468 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryBillType] Prepared SQL: [SELECT DISTINCT /* Codes-CodeGeneralMap.select_InquiryBillType */                        D.BILL_TYPE AS CODE,                        C.CODE_DESC AS NAME,                        C.ORDER_SEQ                   FROM TB_BILL_DEFINE D, TB_CODE_MASTER C                  WHERE D.BILL_TYPE = C.CODE                    AND C.CODE_TYPE = 'BLTP'                    AND D.USE_CHK = 'Y'               ORDER BY C.ORDER_SEQ]
2025-02-28 14:48:00,469 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryBillModeType] Prepared SQL: [SELECT /* Codes-CodeGeneralMap.select_InquiryBillModeType*/               CODE AS CODE, CODE_DESC AS NAME                       FROM TB_CODE_MASTER         WHERE CODE_TYPE = 'BMTP'         UNION ALL          SELECT GNRL_CODE AS CODE, GNRL_NM AS NAME          FROM TB_GNRL_CODE         WHERE GNRL_TYPE = 'SSR'           AND BILL_CHK = 'Y']
2025-02-28 14:48:00,471 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryCodeTypes] Prepared SQL: [SELECT  /* Codes-CodeGeneralMap.select_InquiryCodeTypes */        CODE_TYPE     AS CODE,        TYPE_NAME     AS NAME        FROM    TB_CODE_TYPE        WHERE   1=1]
2025-02-28 14:48:00,472 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryCodesFromMaster] Prepared SQL: [SELECT  /* Codes-CodeGeneralMap.select_InquiryCodesFromMaster*/        A.CODE        AS CODE,        A.CODE_DESC   AS NAME,        B.CODE_TYPE   AS TYPE,        B.TYPE_NAME   AS TYPENAME,        A.FORE_COLOR AS FORE_COLOR,        A.BACK_COLOR AS BACK_COLOR,        ISNULL(A.USE_CHK, 'N') AS USE_CHK        FROM    TB_CODE_MASTER A,        TB_CODE_TYPE B        WHERE   1=1        AND A.CODE_TYPE = B.CODE_TYPE        AND B.CODE_TYPE =  @param0                 ORDER BY ORDER_SEQ]
2025-02-28 14:48:00,473 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGeneralCodes] Prepared SQL: [select  /* Codes-CodeGeneralMap.select_InquiryCodesFromMaster*/      s_cd          as  code,      s_cd_desc     as name,      'TYPE'        as type,      'type_name'   as typename,      '' as fore_color,      '' as back_color,      '' as DEFAULT_SELECT,      '' as CODE_GROUP,      '' as VALUE1      from TMT_CD_MSTD      WHERE L_CD = 'MT'      AND   M_CD =  @param0       AND   S_CD_USE = 'Y']
2025-02-28 14:48:00,473 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVesselCodes] Prepared SQL: [SELECT  /* Codes-CodeGeneralMap.select-select_InquiryVesselCodes */        VSL_CD AS CODE,        VSL_NM AS NAME,        'VESSEL_CODE' AS TYPE,        'VESSEL_CODE' AS TYPENAME        FROM        TB_VSL        WHERE   1=1        ORDER BY CODE]
2025-02-28 14:48:00,474 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryVesselCodesAndLocalNames] Prepared SQL: [SELECT /* Codes-CodeGeneralMap.select-select_inquiryVesselLocalNames */        VSL_CD AS CODE         VSL_LNM AS NAME,        'VESSEL_LOCAL_NAME' AS TYPE,        'VESSEL_LOCAL_NAME' AS TYPENAME          FROM TB_VSL         ORDER BY CODE]
2025-02-28 14:48:00,474 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryVesselCodesBLOB] Prepared SQL: [SELECT VSL_CD CODE             , '' NAME          FROM TB_VSL_DEFINE         ORDER BY CODE]
2025-02-28 14:48:00,475 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdOpr] Prepared SQL: [WITH LANE_OPR AS        (SELECT L.PTNR_CODE, L.FORE_COLOR, L.BACK_COLOR        FROM TB_LANE_OPR  L, TB_BERTHPLAN  B        WHERE 1 = 1        AND B.VSL_CD =  @param0         AND B.CALL_YEAR =  @param1         AND B.CALL_SEQ =  @param2         AND L.LANE_CD = B.OUT_LANE)        SELECT DISTINCT          PTNR_CODE AS CODE,          ENG_SNM AS NAME,          FORE_COLOR AS VALUE1,          BACK_COLOR AS VALUE2,          FORE_COLOR AS FORE_COLOR,          BACK_COLOR AS BACK_COLOR        FROM        (SELECT L.PTNR_CODE, P.ENG_SNM, L.FORE_COLOR, L.BACK_COLOR          FROM LANE_OPR  AS L LEFT OUTER JOIN TB_PTNR  AS P          ON L.PTNR_CODE = P.PTNR_CODE          AND P.PTNR_TYPE = 'SHP'        UNION ALL        SELECT V.PTNR_CODE, P.ENG_SNM, V.FORE_COLOR, V.BACK_COLOR          FROM TB_VSL_OPR  AS V LEFT OUTER JOIN TB_PTNR  AS P          ON V.PTNR_CODE = P.PTNR_CODE          AND P.PTNR_TYPE = 'SHP'          WHERE  1 = 1          AND V.VSL_CD =  @param0           AND V.CALL_YEAR =  @param1           AND V.CALL_SEQ =  @param2           AND V.PTNR_CODE NOT IN (SELECT PTNR_CODE FROM LANE_OPR)        )  AS A        ORDER BY PTNR_CODE ASC]
2025-02-28 14:48:00,476 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdOprOnly] Prepared SQL: [SELECT DISTINCT              V.PTNR_CODE AS CODE,              P.ENG_SNM AS NAME,              P.FORE_COLOR AS VALUE1,              P.BACK_COLOR AS VALUE2,              V.FORE_COLOR AS FORE_COLOR,              V.BACK_COLOR AS BACK_COLOR               FROM TB_VSL_OPR V, TB_PTNR P              WHERE 1= 1               AND  V.VSL_CD =  @param0               AND  V.CALL_YEAR =  @param1                AND V.CALL_SEQ =  @param2                 AND V.PTNR_CODE = P.PTNR_CODE                AND P.PTNR_TYPE = 'SHP'           ORDER BY V.PTNR_CODE ASC]
2025-02-28 14:48:00,477 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdOprOther] Prepared SQL: [SELECT M.PTNR_CODE AS CODE,        P.ENG_SNM AS NAME,        P.FORE_COLOR AS VALUE1,        P.BACK_COLOR AS VALUE2,        P.FORE_COLOR AS FORE_COLOR,        P.BACK_COLOR AS BACK_COLOR        FROM        (SELECT DISTINCT PTNR_CODE        FROM TB_RESERVE        WHERE VSL_CD =  @param0         AND CALL_YEAR =  @param1         AND CALL_SEQ =  @param2         UNION SELECT DISTINCT PTNR_CODE        FROM TB_INVENTORY        WHERE VSL_CD =  @param0         AND CALL_YEAR =  @param1         AND CALL_SEQ =  @param2         UNION SELECT DISTINCT PTNR_CODE        FROM TB_MASTER        WHERE VSL_CD =  @param0         AND CALL_YEAR =  @param1         AND CALL_SEQ =  @param2         UNION SELECT DISTINCT PTNR_CODE        FROM TB_MOVINS        WHERE VSL_CD =  @param0         AND CALL_YEAR =  @param1         AND CALL_SEQ =  @param2         UNION SELECT DISTINCT PTNR_CODE        FROM TB_THRU        WHERE VSL_CD =  @param0         AND CALL_YEAR =  @param1         AND CALL_SEQ =  @param2 ) M        LEFT OUTER JOIN TB_PTNR P        ON M.PTNR_CODE = P.PTNR_CODE        AND P.PTNR_TYPE = 'SHP'        WHERE M.PTNR_CODE IS NOT NULL]
2025-02-28 14:48:00,478 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryTerminalFdestChk] Prepared SQL: [SELECT FND_PORT_CHK          FROM TB_TMNL A LEFT OUTER JOIN TB_TMNL_CFG B            ON A.TMNL_CD = B.TMNL_CD]
2025-02-28 14:48:00,479 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryTerminalPorChk] Prepared SQL: [SELECT POR_PORT_CHK        FROM TB_TMNL A LEFT OUTER JOIN TB_TMNL_CFG B         ON A.TMNL_CD = B.TMNL_CD]
2025-02-28 14:48:00,479 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryTerminalPort] Prepared SQL: [SELECT PORT        FROM TB_TMNL A LEFT OUTER JOIN TB_TMNL_CFG B          ON A.TMNL_CD = B.TMNL_CD]
2025-02-28 14:48:00,480 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdPorts] Prepared SQL: [WITH LANE_POD               AS (SELECT MIN(CAST(L.PORT_SEQ AS NUMERIC(5,0))) SEQ                         ,L.CALLING_PORT PORT                    FROM TB_LANE_PORT L                         ,TB_BERTHPLAN B                   WHERE B.VSL_CD =  @param0                      AND B.CALL_YEAR =  @param1                     AND B.CALL_SEQ =  @param2                     AND L.LANE_CD = B.OUT_LANE                   GROUP BY L.CALLING_PORT),               VSL_POD               AS (SELECT POD PORT                         ,PORT_PREFIX                         ,FORE_COLOR                         ,BACK_COLOR                     FROM TB_VSL_POD                   WHERE VSL_CD =   @param0                     AND CALL_YEAR =  @param1                     AND CALL_SEQ =  @param2 ),               UNLO_PORT               AS (SELECT ISNULL(CNTRY_CD, '') + ISNULL(PORT_CD, '') PORT                        ,PORT_PREFIX                         ,FORE_COLOR                         ,BACK_COLOR                     FROM TB_PORT)         SELECT V.PORT          AS CODE                 ,V.PORT         AS NAME                 ,V.FORE_COLOR   AS VALUE1                 ,V.BACK_COLOR   AS VALUE2                 ,V.FORE_COLOR   AS FORE_COLOR                 ,V.BACK_COLOR   AS BACK_COLOR                 ,V.PORT_PREFIX  AS VALUE3                 ,CAST(L.SEQ AS NVARCHAR(MAX)) AS VALUE4                 ,''             AS VALUE5                 ,L.SEQ           FROM VSL_POD V LEFT OUTER JOIN LANE_POD L            ON V.PORT = L.PORT        UNION ALL         SELECT L.PORT          AS CODE                 ,L.PORT         AS NAME                 ,U.FORE_COLOR   AS VALUE1                 ,U.BACK_COLOR   AS VALUE2                 ,U.FORE_COLOR   AS FORE_COLOR                 ,U.BACK_COLOR   AS BACK_COLOR                 ,U.PORT_PREFIX  AS VALUE3                 ,CAST(L.SEQ AS NVARCHAR(MAX)) AS VALUE4                 ,''             AS VALUE5                 ,L.SEQ            FROM LANE_POD L LEFT OUTER JOIN UNLO_PORT U             ON L.PORT = U.PORT          WHERE L.PORT NOT IN (SELECT PORT FROM VSL_POD)           ORDER BY SEQ, CODE]
2025-02-28 14:48:00,481 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdPortOnly] Prepared SQL: [SELECT V.POD AS CODE,           P.PORT_NM AS NAME,           V.FORE_COLOR AS VALUE1,           V.BACK_COLOR AS VALUE2,           V.FORE_COLOR AS FORE_COLOR,           V.BACK_COLOR AS BACK_COLOR       FROM TB_VSL_POD V LEFT OUTER JOIN TB_PORT P       ON V.POD = ISNULL(P.CNTRY_CD,'') + ISNULL(P.PORT_CD,'')          WHERE V.VSL_CD =  @param0           AND V.CALL_YEAR =  @param1           AND V.CALL_SEQ =  @param2         ORDER BY CODE]
2025-02-28 14:48:00,482 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryVvdVessel] Prepared SQL: [SELECT DISTINCT           ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS CODE,           ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS NAME,           STORAGE_TYPE AS VALUE1,           CASE WHEN (ATD IS NULL OR ATD = '') THEN 'N' ELSE 'Y' END AS VALUE2,           NULL AS FORE_COLOR, NULL AS BACK_COLOR        FROM TB_BERTHPLAN        ORDER BY CODE]
2025-02-28 14:48:00,482 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryAssignableVvdVesselOnly] Prepared SQL: [SELECT DISTINCT            ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS CODE,           ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS NAME,           STORAGE_TYPE AS VALUE1,           CASE ATD WHEN NULL THEN 'N' ELSE 'Y' END AS VALUE2,           NULL AS FORE_COLOR, NULL AS BACK_COLOR          FROM TB_BERTHPLAN         WHERE (STORAGE_TYPE IS NULL OR STORAGE_TYPE = '' OR VSL_CD = 'TBA' OR STORAGE_TYPE = 'X')           AND ATD IS NULL           AND ISNULL(STATUS, 'NULL') <> 'C'           AND (YARD_CLOSE IS NULL OR YARD_CLOSE > SYSDATETIME())         ORDER BY CODE]
2025-02-28 14:48:00,483 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryOprAgency] Prepared SQL: [SELECT  /* Codes-CodeGeneralMap.select-select_InquiryOprAgency */        DISTINCT A.AGENCY_CODE AS CODE,                A.AGENCY_CODE AS NAME,                A.AGENCY_TYPE AS TYPE,                'AGENCY_TYPE' AS TYPENAME          FROM TB_AGENCY A, TB_PTNR P          WHERE 1 = 1            AND A.AGENCY_TYPE = P.PTNR_TYPE            AND A.PTNR_CODE = P.PTNR_CODE            AND A.AGENCY_TYPE = 'SHP'            AND A.PTNR_CODE =  @param0         ORDER BY  CODE]
2025-02-28 14:48:00,485 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryInspectionArea] Prepared SQL: [SELECT BLOCKAREAS AS CODE, BLOCKAREAS AS NAME        FROM TB_GNRL_CODE        WHERE GNRL_TYPE =  @param0  AND GNRL_CODE =  @param1         ORDER BY BLOCKAREAS]
2025-02-28 14:48:00,486 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryLanePortCodes] Prepared SQL: [SELECT CALLING_PORT AS CODE             , CALLING_PORT AS NAME          FROM TB_LANE_PORT         WHERE 1=1           AND LANE_CD =  @param0          ORDER BY CONVERT(INT, PORT_SEQ)]
2025-02-28 14:48:00,486 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryLanePortCodesOnly] Prepared SQL: [SELECT DISTINCT CALLING_PORT AS CODE             , CALLING_PORT AS NAME          FROM TB_LANE_PORT         WHERE 1=1           AND LANE_CD =  @param0          ORDER BY CODE]
2025-02-28 14:48:00,486 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryPackingGroups] Prepared SQL: [SELECT         PACKING_GRP AS CODE        ,DESCRIPTION AS NAME        FROM TB_IMDGPREMIUM ORDER BY 1]
2025-02-28 14:48:00,487 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryMarinePollut] Prepared SQL: [SELECT DISTINCT        MARINE_POLLUT AS CODE        ,MARINE_POLLUT AS NAME        FROM TB_IMDGDATA ORDER BY 1]
2025-02-28 14:48:00,487 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryContainerSize] Prepared SQL: [SELECT DISTINCT T.CODE1 AS CODE, ((T.CODE1 + ' - ') + LTRIM(RTRIM(SUBSTRING(T.CODE1_DESC, 8, 6)))) AS NAME, T.CODE1_DESC AS VALUE1        FROM TB_SIZE_CODE T ORDER BY T.CODE1]
2025-02-28 14:48:00,488 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryContainerHeightWidth] Prepared SQL: [SELECT DISTINCT CODE2 AS CODE, REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(CODE2_DESC, 'ft', ''), 'm', ''), 'Width', 'W'), 'Height', 'H'), '&', '') AS NAME          FROM TB_SIZE_CODE        ORDER BY CODE2]
2025-02-28 14:48:00,488 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryContainerType] Prepared SQL: [SELECT DISTINCT T.GCODE AS Code, T.GCODE_DESC AS Name, T.GCODE_FORE_COLOR VALUE1, T.GCODE_BACK_COLOR VALUE2,                T.GCODE_FORE_COLOR FORE_COLOR, T.GCODE_BACK_COLOR BACK_COLOR        FROM TB_TYPE_CODE T ORDER BY T.GCODE]
2025-02-28 14:48:00,489 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_PositionRule] Prepared SQL: [SELECT DISTINCT RULE_CD AS CODE,VALUE AS NAME        FROM TB_POSRULE        WHERE ITEM = 'RULE_DESC'        ORDER BY RULE_CD ASC]
2025-02-28 14:48:00,489 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_PositionRuleMain] Prepared SQL: [SELECT RULE_CD AS CODE,RULE_DESC AS NAME          FROM TB_POSRULE_MAIN         ORDER BY RULE_CD]
2025-02-28 14:48:00,499 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_PositionRuleRenewed] Prepared SQL: [SELECT RULE_CD As Code,RULE_DESC As Name        FROM TB_POSRULE_RENEWED        ORDER BY RULE_CD]
2025-02-28 14:48:00,499 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_PositionRuleMixture] Prepared SQL: [SELECT DISTINCT RULE_CD AS CODE, VALUE AS NAME          FROM TB_POSRULE_MIXTURE         WHERE ITEM = 'RULE_DESC'         ORDER BY RULE_CD]
2025-02-28 14:48:00,500 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_PositionRuleStackVolume] Prepared SQL: [SELECT DISTINCT RULE_CD AS CODE, RULE_DESC AS NAME          FROM TB_POSRULE_STACK_VOLUME        ORDER BY RULE_CD]
2025-02-28 14:48:00,502 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryBerth] Prepared SQL: [SELECT BERTH AS CODE,        BERTH AS NAME        FROM TB_BERTH        WHERE 1=1]
2025-02-28 14:48:00,502 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryBitt] Prepared SQL: [SELECT BITT AS CODE,        BITT AS NAME        FROM TB_BITT        WHERE 1=1        ORDER BY BERTH, BITT]
2025-02-28 14:48:00,503 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_VesselVVDs] Prepared SQL: [SELECT R.VVD        AS CODE              , R.VVD        AS NAME              , C.FORE_COLOR AS VALUE1              , C.BACK_COLOR AS VALUE2              , C.FORE_COLOR              , C.BACK_COLOR           FROM (SELECT RANK()                          OVER (                            ORDER BY A.VVD) - 1 AS RANK                        , A.VVD                  FROM (SELECT DISTINCT VSL_CD + '-' + CALL_YEAR + '-' + CALL_SEQ AS VVD                           FROM TB_INVENTORY) A) R                JOIN (SELECT ORDER_SEQ                           , FORE_COLOR                           , BACK_COLOR                        FROM TB_COLOR) C                  ON ( R.RANK % (SELECT Count(*)                                   FROM TB_COLOR) ) + 1 = C.ORDER_SEQ          ORDER BY R.VVD]
2025-02-28 14:48:00,503 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_VesselUserVoy] Prepared SQL: [SELECT R.USER_VOY        AS CODE              , R.VVD        AS NAME              , C.FORE_COLOR AS VALUE1              , C.BACK_COLOR AS VALUE2              , C.FORE_COLOR              , C.BACK_COLOR           FROM (SELECT RANK()                          OVER (                            ORDER BY A.VVD) - 1 AS RANK                        , A.VVD                       , A.USER_VOY                  FROM (SELECT DISTINCT VSL_CD + '-' + CALL_YEAR + '-' + CALL_SEQ AS VVD                             , USER_VOY AS USER_VOY                           FROM TB_INVENTORY) A) R                JOIN (SELECT ORDER_SEQ                           , FORE_COLOR                           , BACK_COLOR                        FROM TB_COLOR) C                  ON ( R.RANK % (SELECT Count(*)                                   FROM TB_COLOR) ) + 1 = C.ORDER_SEQ          ORDER BY R.VVD]
2025-02-28 14:48:00,504 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_railScheduleInInventory] Prepared SQL: [SELECT DISTINCT B.TRN_VOY AS CODE, CONCAT(B.TRN_CD, '-', B.TRN_YEAR, '-', B.TRN_SEQ) AS NAME, B.TRN_YEAR, B.TRN_SEQ          FROM TB_INVENTORY A, TB_RAILSCH B         WHERE A.TRN_VOY2 = B.TRN_VOY         ORDER BY B.TRN_YEAR DESC, B.TRN_SEQ DESC]
2025-02-28 14:48:00,504 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_VesselCallSeq] Prepared SQL: [SELECT DISTINCT ISNULL(I.VSL_CD,'') + '-' + ISNULL(CALL_SEQ,'') AS CODE,        ISNULL(I.VSL_CD,'') + '-' + ISNULL(I.CALL_SEQ,'') + ' : ' + ISNULL(V.VSL_NM,'') AS NAME        FROM TB_VSL V, TB_INVENTORY I        WHERE V.VSL_CD = I.VSL_CD        ORDER BY CODE]
2025-02-28 14:48:00,505 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryReeferArea] Prepared SQL: [SELECT /* Codes-CodeGeneralMap.select-select_InquiryReeferArea */                RF_AREA AS CODE, '' AS NAME              FROM (SELECT DISTINCT BLOCK RF_AREA                               FROM TB_YSLOT                              WHERE RF_CHK = 'Y'                    UNION ALL                    SELECT DISTINCT BLOCK RF_AREA                      FROM TB_YSLOT_USAGE                     WHERE RF_CHK = 'Y'                    UNION ALL                    SELECT AREA RF_AREA                      FROM TB_AREA                     WHERE AREA_USE = 'R' OR AREA_USE2 = 'R') RF          ORDER BY RF_AREA]
2025-02-28 14:48:00,506 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InventoryPOD] Prepared SQL: [SELECT DISTINCT I.POD         AS CODE                        ,P.PORT_NM     AS NAME                        ,P.PORT_PREFIX AS VALUE1                        ,P.PORT_CODE   AS VALUE2                        ,P.FORE_COLOR                        ,P.BACK_COLOR           FROM (SELECT DISTINCT POD                   FROM TB_INVENTORY                  WHERE POD IS NOT NULL                    AND POD <> '') I                ,TB_PORT P          WHERE I.POD = P.CNTRY_CD                        + P.PORT_CD         ORDER BY I.POD]
2025-02-28 14:48:00,506 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InventoryFPOD] Prepared SQL: [SELECT DISTINCT I.FPOD        AS CODE                        ,P.PORT_NM     AS NAME                        ,P.PORT_PREFIX AS VALUE1                        ,P.PORT_CODE   AS VALUE2                        ,P.FORE_COLOR                        ,P.BACK_COLOR           FROM (SELECT DISTINCT FPOD                   FROM TB_INVENTORY                  WHERE FPOD IS NOT NULL                    AND FPOD <> '') I                ,TB_PORT P          WHERE I.FPOD = P.CNTRY_CD                        + P.PORT_CD         ORDER BY I.FPOD]
2025-02-28 14:48:00,507 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_Zones] Prepared SQL: [SELECT   DISTINCT ISNULL(ZONE_ID,'') + '/' + ISNULL(ZONE_DATA_TYPE, '') AS CODE, '' AS NAME        FROM   TB_ZONE_ID        WHERE   ZONE_DATA_TYPE IN ('BLOCK', 'AREA')        ORDER BY   1]
2025-02-28 14:48:00,507 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_ShiftGroups] Prepared SQL: [SELECT        B.QUEUE_NAME AS CODE, B.QUEUE_DESCRIPTION AS NAME        FROM        (SELECT BLOCK AS QUEUE_NAME, IC_CHK AS QUEUE_TYPE,'' AS QUEUE_DESCRIPTION FROM TB_BLOCK        WHERE IC_CHK IS NOT NULL        UNION SELECT AREA AS QUEUE_NAME, IC_CHK AS QUEUE_TYPE,'' AS QUEUE_DESCRIPTION  FROM TB_AREA        WHERE IC_CHK IS NOT NULL        UNION SELECT 'HK' AS QUEUE_NAME,  'M' AS QUEUE_TYPE,'Housekeeping' AS QUEUE_DESCRIPTION        UNION SELECT 'HK2' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 2' AS QUEUE_DESCRIPTION        UNION SELECT 'HK3' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 3' AS QUEUE_DESCRIPTION        UNION SELECT 'HK4' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 4' AS QUEUE_DESCRIPTION        UNION SELECT 'HK5' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 5' AS QUEUE_DESCRIPTION        UNION SELECT 'HK6' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 6' AS QUEUE_DESCRIPTION        UNION SELECT 'HK7' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 7' AS QUEUE_DESCRIPTION        UNION SELECT 'HK8' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 8' AS QUEUE_DESCRIPTION        UNION SELECT 'HK9' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 9' AS QUEUE_DESCRIPTION                UNION SELECT 'HK10' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 10' AS QUEUE_DESCRIPTION        UNION SELECT 'HK11' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 11' AS QUEUE_DESCRIPTION        UNION SELECT 'HK12' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 12' AS QUEUE_DESCRIPTION        UNION SELECT 'HK13' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 13' AS QUEUE_DESCRIPTION        UNION SELECT 'HK14' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 14' AS QUEUE_DESCRIPTION        UNION SELECT 'HK15' AS QUEUE_NAME, 'M' AS QUEUE_TYPE,'Housekeeping 15' AS QUEUE_DESCRIPTION) B        LEFT OUTER JOIN TB_DISPATCH_QUEUE Q        ON B.QUEUE_NAME = Q.QUEUE_NAME        WHERE B.QUEUE_TYPE = 'M'        ORDER BY 1 ASC]
2025-02-28 14:48:00,508 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-GCNo] Prepared SQL: [SELECT G.EQU_NO AS CODE, G.EQU_NO AS NAME         FROM TB_GC G, TB_EQU E WHERE G.EQU_NO = E.EQU_NO AND E.EQU_TYPE1 = 'GC'        ORDER BY G.EQU_NO]
2025-02-28 14:48:00,508 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-YTNo] Prepared SQL: [SELECT E.EQU_NO AS CODE, E.EQU_NO AS NAME        FROM TB_EQU E WHERE E.EQU_TYPE1 = 'YT'        ORDER BY E.EQU_NO]
2025-02-28 14:48:00,509 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-DbLink] Prepared SQL: [SELECT NAME CODE, ISNULL(NAME,'') + ' : ' + ISNULL(CATALOG,'') NAME FROM sys.servers WHERE SERVER_ID > 0]
2025-02-28 14:48:00,509 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryStoppageCodes] Prepared SQL: [SELECT  DISTINCT /* Codes-CodeGeneralMap.select-InquiryStoppageCodes */        STOP_CODE AS CODE,        STOP_DESC AS NAME,        STOP_TYPE AS VALUE1,        STOP_TYPE AS VALUE2,        FORE_COLOR AS FORE_COLOR,        BACK_COLOR AS BACK_COLOR        FROM    TB_STPCODE]
2025-02-28 14:48:00,510 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-validPackingGroup] Prepared SQL: [SELECT DISTINCT I.PACKING_GRP CODE, P.DESCRIPTION NAME          FROM TB_IMDGDATA I LEFT OUTER JOIN TB_IMDGPREMIUM P            ON I.PACKING_GRP = P.PACKING_GRP          WHERE I.PACKING_GRP IS NOT NULL           AND CLASS =  @param0            AND UNNO =  @param1          ORDER BY I.PACKING_GRP ASC]
2025-02-28 14:48:00,511 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-allPackingGroup] Prepared SQL: [SELECT DISTINCT I.PACKING_GRP CODE, P.DESCRIPTION NAME          FROM TB_IMDGDATA I LEFT OUTER JOIN TB_IMDGPREMIUM P            ON I.PACKING_GRP = P.PACKING_GRP         WHERE I.PACKING_GRP IS NOT NULL         ORDER BY I.PACKING_GRP ASC]
2025-02-28 14:48:00,512 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquirySegregationCode] Prepared SQL: [SELECT SEGREGATION AS CODE, '' AS NAME          FROM TB_SEGREGATIONCODE]
2025-02-28 14:48:00,512 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InventoryOperator] Prepared SQL: [SELECT DISTINCT I.PTNR_CODE  AS CODE                        ,P.ENG_SNM    AS NAME                        ,P.FORE_COLOR AS VALUE1                        ,P.BACK_COLOR AS VALUE2                        ,P.FORE_COLOR AS FORE_COLOR                        ,P.BACK_COLOR AS BACK_COLOR           FROM (SELECT DISTINCT PTNR_CODE                   FROM TB_INVENTORY                  WHERE PTNR_CODE IS NOT NULL                    AND PTNR_CODE <> '')I                ,TB_PTNR P          WHERE I.PTNR_CODE = P.PTNR_CODE          ORDER BY I.PTNR_CODE]
2025-02-28 14:48:00,512 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryAccessibleProgramList] Prepared SQL: [SELECT  A.CODE AS CODE, A.CODE_DESC AS NAME          FROM TB_CODE_MASTER A, TB_APP_ACCESS B         WHERE 1 = 1          AND A.CODE = B.PGM_CODE          AND A.CODE_TYPE = 'PRGMA'          AND A.USE_CHK = 'Y'          AND B.USE_CHK = 'Y'          AND B.USER_TYPE =  @param0           AND B.USER_ID =  @param1           AND EXISTS (SELECT 'X'                        FROM TB_BASIC_DEFINE C                       WHERE C.PGM_CODE = B.PGM_CODE                         AND C.ENABLE = 'Y' )        ORDER BY ORDER_SEQ]
2025-02-28 14:48:00,513 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryResourceCode] Prepared SQL: [SELECT  /* Codes-CodeGeneralMap.select_InquiryResourceCode */        RS_CODE AS CODE, RS_NAME AS NAME        FROM TB_RS_CODE        WHERE RS_TYPE =  @param0         AND USE_CHK = 'Y'        ORDER BY RS_CODE]
2025-02-28 14:48:00,514 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryStevedore] Prepared SQL: [SELECT /* Codes-CodeGeneralMap.select_InquiryStevedore */        WORKER_CD, ENG_NM        FROM TB_STEVEDORE        ORDER BY WORKER_CD]
2025-02-28 14:48:00,515 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryAssignedGc] Prepared SQL: [SELECT /* Common-CodeItem.select-InquiryAssignedGc */            DISTINCT EQU_NO CODE, EQU_NO NAME        FROM TB_GANG_ASGN        WHERE VSL_CD =  @param0           AND CALL_YEAR =  @param1           AND CALL_SEQ =  @param2         ORDER BY EQU_NO]
2025-02-28 14:48:00,515 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-sztpGroupCodes] Prepared SQL: [SELECT R.GR_CODE      AS CODE              , R.GR_CODE    AS NAME              , C.FORE_COLOR AS VALUE1              , C.BACK_COLOR AS VALUE2              , C.FORE_COLOR              , C.BACK_COLOR           FROM (SELECT RANK()                          OVER (                            ORDER BY A.GR_CODE) - 1 RANK                        , A.GR_CODE                   FROM (SELECT DISTINCT GR_CODE                           FROM TB_GSZTP                          WHERE ISO_TYPE = '6346') A) R                JOIN (SELECT ORDER_SEQ                           , FORE_COLOR                           , BACK_COLOR                        FROM TB_COLOR) C                  ON ( R.RANK % (SELECT Count(*)                                   FROM TB_COLOR) ) + 1 = C.ORDER_SEQ          ORDER BY R.GR_CODE]
2025-02-28 14:48:00,515 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-sztpPrivateCodes] Prepared SQL: [SELECT DISTINCT PRI_CODE AS CODE,               PRI_CODE AS NAME          FROM TB_GSZTP         ORDER BY CODE]
2025-02-28 14:48:00,516 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryYardPosition] Prepared SQL: [SELECT BLOCK CODE, BLOCK NAME        FROM TB_BLOCK        UNION ALL SELECT AREA CODE, AREA NAME         FROM TB_AREA]
2025-02-28 14:48:00,516 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryQuayPosition] Prepared SQL: [SELECT BLOCK CODE, BLOCK NAME        FROM TB_BLOCK        WHERE IC_CHK = 'Q'        UNION ALL SELECT AREA CODE, AREA NAME        FROM TB_AREA        WHERE IC_CHK = 'Q'        UNION SELECT BERTH CODE, BERTH NAME        FROM TB_BERTH]
2025-02-28 14:48:00,517 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGatePosition] Prepared SQL: [SELECT BLOCK CODE, BLOCK NAME        FROM TB_BLOCK        WHERE IC_CHK = 'G'        UNION ALL SELECT AREA CODE, AREA NAME        FROM TB_AREA        WHERE IC_CHK = 'G']
2025-02-28 14:48:00,518 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryRailPosition] Prepared SQL: [SELECT BLOCK CODE, BLOCK NAME        FROM TB_BLOCK        WHERE IC_CHK = 'R'        UNION ALL SELECT AREA CODE, AREA NAME        FROM TB_AREA        WHERE IC_CHK = 'R']
2025-02-28 14:48:00,518 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryGroupCode] Prepared SQL: [SELECT JOB_CD CODE, JOB_NM NAME        FROM TB_JOB_COLOR        WHERE JOB_TYPE = 'BTB']
2025-02-28 14:48:00,518 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryPlanningPatternVVD] Prepared SQL: [SELECT DISTINCT P.VSL_ID CODE, P.VSL_ID NAME        FROM TB_PLANPTN P LEFT OUTER JOIN        (SELECT ISNULL(VSL_CD,'') + ' - ' + ISNULL(CALL_YEAR,'') + ' - ' + ISNULL(CALL_SEQ,'') VSL_ID        FROM TB_BERTHPLAN) B          ON P.VSL_ID = B.VSL_ID         ORDER BY P.VSL_ID]
2025-02-28 14:48:00,519 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryPlanningPatternUserVoy] Prepared SQL: [SELECT DISTINCT CASE B.USER_VOY WHEN NULL THEN P.VSL_ID ELSE B.USER_VOY AS NAME           FROM (SELECT DISTINCT VSL_ID                   FROM TB_PLANPTN) P LEFT OUTER JOIN               (SELECT ISNULL(VSL_CD,'') + ' - ' + ISNULL(CALL_YEAR,'') + ' - ' + ISNULL(CALL_SEQ,'') VSL_ID                      , USER_VOY                FROM TB_BERTHPLAN) B            ON P.VSL_ID = B.VSL_ID          WHERE B.USER_VOY IS NOT NULL         ORDER BY P.VSL_ID]
2025-02-28 14:48:00,520 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryContainerLengthInDB] Prepared SQL: [SELECT DISTINCT CODE1 CODE, CODE1_DESC NAME        FROM TB_SIZE_CODE        ORDER BY CODE1]
2025-02-28 14:48:00,520 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryGroupingPatternCodes] Prepared SQL: [SELECT DISTINCT FILTER_CD CODE, FILTER_CD NAME        FROM TB_GP        ORDER BY FILTER_CD]
2025-02-28 14:48:00,521 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryWorkGroupNo] Prepared SQL: [SELECT P.GROUP_NO AS CODE, P.GROUP_NO AS NAME        FROM TB_WORK_GRP P,        (SELECT DISTINCT GROUP_NO FROM TB_SHIFTPLAN WHERE ACTUAL_TIME IS NULL) B        WHERE P.GROUP_NO = B.GROUP_NO        AND ISNULL(WRK_TYPE, ' ') != 'V'        ORDER BY P.GROUP_NO]
2025-02-28 14:48:00,521 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryVVD] Prepared SQL: [SELECT DISTINCT ISNULL(VSL_CD,'') + '-' + ISNULL(CALL_YEAR,'') + '-' + ISNULL(CALL_SEQ,'') AS CODE,              ISNULL(VSL_CD,'') + '-' + ISNULL(CALL_YEAR,'') + '-' + ISNULL(CALL_SEQ,'') AS NAME        FROM TB_INVENTORY        ORDER BY ISNULL(VSL_CD,'') + '-' + ISNULL(CALL_YEAR,'') + '-' + ISNULL(CALL_SEQ,'')]
2025-02-28 14:48:00,522 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryUserVoy] Prepared SQL: [SELECT DISTINCT ISNULL(USER_VOY,'') AS CODE             , ISNULL(VSL_CD,'') + '-' + ISNULL(CALL_YEAR,'') + '-' + ISNULL(CALL_SEQ,'') AS NAME          FROM TB_INVENTORY         ORDER BY ISNULL(VSL_CD,'') + '-' + ISNULL(CALL_YEAR,'') + '-' + ISNULL(CALL_SEQ,'')]
2025-02-28 14:48:00,522 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryPreVVD] Prepared SQL: [SELECT DISTINCT ISNULL(PREV_VSL,'') + '-' + ISNULL(PREV_YEAR,'') + '-' + ISNULL(PREV_SEQ,'') AS CODE,              ISNULL(PREV_VSL,'') + '-' + ISNULL(PREV_YEAR,'') + '-' + ISNULL(PREV_SEQ,'') AS NAME        FROM TB_INVENTORY        ORDER BY ISNULL(PREV_VSL,'') + '-' + ISNULL(PREV_YEAR,'') + '-' + ISNULL(PREV_SEQ,'')]
2025-02-28 14:48:00,523 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryPreUserVoy] Prepared SQL: [SELECT DISTINCT ISNULL(PREV_USER_VOY,'') AS CODE             , ISNULL(PREV_VSL,'') + '-' + ISNULL(PREV_YEAR,'') + '-' + ISNULL(PREV_SEQ,'') AS NAME          FROM TB_INVENTORY         WHERE PREV_USER_VOY IS NOT NULL         ORDER BY ISNULL(PREV_VSL,'') + '-' + ISNULL(PREV_YEAR,'') + '-' + ISNULL(PREV_SEQ,'')]
2025-02-28 14:48:00,523 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryTierCode] Prepared SQL: [SELECT CODE               ,CODE_DESC AS NAME               ,CODE_TYPE AS VALUE1               ,CODE_TYPE AS VALUE2               ,FORE_COLOR               ,BACK_COLOR           FROM TB_CODE_MASTER          WHERE CODE_TYPE = 'TIER'            AND CONVERT(INT, ISNULL(CODE, 0)) <= (SELECT MAX(MXTIER)                                                              FROM TB_BLOCK)]
2025-02-28 14:48:00,524 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryBoundaryPlanOPR] Prepared SQL: [SELECT DISTINCT PTNR_CODE  AS CODE                       ,ENG_SNM    AS NAME                        ,BACK_COLOR AS VALUE1                        ,FORE_COLOR AS VALUE2                        ,FORE_COLOR                        ,BACK_COLOR         FROM   TB_PTNR P         WHERE  EXISTS (SELECT 1                        FROM   (SELECT DISTINCT ',' + OPRS + ',' AS OPRS                                FROM   TB_RND_BNDR                                UNION                                SELECT DISTINCT ',' + OPRS + ',' AS OPRS                                FROM   TB_BOUNDARY) B                        WHERE  B.OPRS LIKE ( '%,' + P.PTNR_CODE + ',%' ))         ORDER  BY PTNR_CODE]
2025-02-28 14:48:00,524 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryBoundaryPlanPOD] Prepared SQL: [SELECT DISTINCT PODS AS CODE                        ,''  AS NAME           FROM TB_BOUNDARY          WHERE PODS IS NOT NULL                AND PODS <> ''                AND PODS <> '*']
2025-02-28 14:48:00,525 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryBoundaryPlanVVD] Prepared SQL: [SELECT R.VSL_ID       AS CODE              , R.USER_VOY     AS NAME              , R.STORAGE_TYPE AS VALUE1              , R.DEPARTURED   AS VALUE2              , C.FORE_COLOR              , C.BACK_COLOR           FROM (SELECT RANK()                          OVER (                            ORDER BY A.VSL_ID) - 1 AS RANK                        , A.VSL_ID                       , A.USER_VOY                       , A.STORAGE_TYPE                        , A.DEPARTURED                   FROM (SELECT DISTINCT P.VSL_ID                                       , B.USER_VOY                                      , B.STORAGE_TYPE                                       , CASE B.ATD                                           WHEN NULL THEN 'N'                                           ELSE 'Y'                                         END AS DEPARTURED                           FROM (SELECT DISTINCT VSL_CD                                               , CALL_YEAR                                               , CALL_SEQ                                              , USER_VOY                                              , STORAGE_TYPE                                               , ATD                                   FROM TB_BERTHPLAN) B                                JOIN (SELECT DISTINCT VSL_ID                                        FROM TB_RND_BNDR                                      UNION ALL                                      SELECT DISTINCT VSL_ID                                        FROM TB_BOUNDARY) P                                  ON B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ =                                     P.VSL_ID)                        A) R                                                     JOIN (SELECT ORDER_SEQ                           , FORE_COLOR                           , BACK_COLOR                        FROM TB_COLOR) C                  ON ( R.RANK % (SELECT Count(*)                                   FROM TB_COLOR) ) + 1 = C.ORDER_SEQ          ORDER BY R.VSL_ID]
2025-02-28 14:48:00,526 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryJobClassCode] Prepared SQL: [SELECT JOB_CD AS CODE               ,JOB_NM AS NAME               ,'' AS VALUE1               ,'' AS VALUE2               ,FORE_COLOR               ,BACK_COLOR           FROM TB_JOB_COLOR          WHERE JOB_TYPE =  @param0]
2025-02-28 14:48:00,526 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryDischargeVVD] Prepared SQL: [SELECT I.PREV_VSL + '-' + I.PREV_YEAR + '-' + I.PREV_SEQ AS CODE               ,I.PREV_VSL + '-' + I.PREV_YEAR + '-' + I.PREV_SEQ AS NAME          FROM (SELECT *                   FROM TB_INVENTORY                  WHERE IX_CD = 'X'                    AND DELV = 'S') I                           INNER JOIN (SELECT *                                         FROM TB_BERTHPLAN                                       WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                   ON I.PREV_VSL = B.VSL_CD                                  AND I.PREV_YEAR = B.CALL_YEAR                                  AND I.PREV_SEQ = B.CALL_SEQ         UNION         SELECT I.VSL_CD + '-' + I.CALL_YEAR + '-' + I.CALL_SEQ AS CODE              ,I.VSL_CD + '-' + I.CALL_YEAR + '-' + I.CALL_SEQ AS NAME          FROM (SELECT *                  FROM TB_INVENTORY                 WHERE IX_CD <> 'X') I                                         INNER JOIN (SELECT *                                                      FROM TB_BERTHPLAN                                                     WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                                 ON I.VSL_CD = B.VSL_CD                                                AND I.CALL_YEAR = B.CALL_YEAR                                                AND I.CALL_SEQ = B.CALL_SEQ]
2025-02-28 14:48:00,527 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryInventoryDischargeUserVoy] Prepared SQL: [SELECT I.PREV_USER_VOY AS CODE              , I.PREV_VSL + '-' + I.PREV_YEAR + '-' + I.PREV_SEQ AS NAME          FROM (SELECT *                   FROM TB_INVENTORY                  WHERE IX_CD = 'X'                    AND DELV = 'S') I                           INNER JOIN (SELECT *                                         FROM TB_BERTHPLAN                                       WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                   ON I.PREV_VSL = B.VSL_CD                                  AND I.PREV_YEAR = B.CALL_YEAR                                  AND I.PREV_SEQ = B.CALL_SEQ          UNION         SELECT I.USER_VOY AS CODE             , I.VSL_CD + '-' + I.CALL_YEAR + '-' + I.CALL_SEQ AS NAME          FROM (SELECT *                  FROM TB_INVENTORY                 WHERE IX_CD <> 'X') I                                         INNER JOIN (SELECT *                                                      FROM TB_BERTHPLAN                                                     WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                                 ON I.VSL_CD = B.VSL_CD                                                AND I.CALL_YEAR = B.CALL_YEAR                                                AND I.CALL_SEQ = B.CALL_SEQ]
2025-02-28 14:48:00,528 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryBoundaryDischargeVVD] Prepared SQL: [SELECT P.DISCH_VSL AS CODE              ,B.DISCH_VSL AS NAME          FROM (SELECT *                  FROM TB_BOUNDARY                 WHERE DISCH_VSL IS NOT NULL) P                                      INNER JOIN (SELECT *                                                    FROM TB_BERTHPLAN                                                  WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                             ON P.DISCH_VSL = B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ         UNION         SELECT P.DISCH_VSL AS CODE              ,B.DISCH_VSL AS NAME          FROM (SELECT *                   FROM TB_RND_BNDR                 WHERE DISCH_VSL IS NOT NULL) P                                      INNER JOIN (SELECT *                                                    FROM TB_BERTHPLAN B                                                   WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                             ON P.DISCH_VSL = B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ]
2025-02-28 14:48:00,528 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryBoundaryDischargeUserVoy] Prepared SQL: [SELECT B.USER_VOY AS CODE             , P.DISCH_VSL AS NAME          FROM (SELECT *                  FROM TB_BOUNDARY                 WHERE DISCH_VSL IS NOT NULL) P                                      INNER JOIN (SELECT *                                                    FROM TB_BERTHPLAN                                                  WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                             ON P.DISCH_VSL = B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ          UNION         SELECT B.USER_VOY AS CODE             , P.DISCH_VSL AS NAME          FROM (SELECT *                   FROM TB_RND_BNDR                 WHERE DISCH_VSL IS NOT NULL) P                                      INNER JOIN (SELECT *                                                    FROM TB_BERTHPLAN B                                                   WHERE ISNULL(STORAGE_TYPE, 'NULL') <> 'V') B                                             ON P.DISCH_VSL = B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ]
2025-02-28 14:48:00,529 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryRegNo] Prepared SQL: [SELECT REG_NO AS CODE, REG_NO AS NAME,               PTNR_TYPE AS VALUE1, PTNR_CODE AS VALUE2          FROM TB_PTNR]
2025-02-28 14:48:00,529 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryRegOfPayer] Prepared SQL: [SELECT DISTINCT REG_NO AS CODE, REG_NO AS NAME, PTNR_TYPE AS VALUE1, PTNR_CODE AS VALUE2,               FORE_COLOR, BACK_COLOR,               CASE WHEN NVL(PAYER_UNUSED_CHK, 'N') = 'Y' THEN 'N' ELSE 'Y' END USE_CHK          FROM TB_PTNR        WHERE REG_NO IS NOT NULL          AND PTNR_TYPE IN (SELECT CODE                              FROM TB_CODE_MASTER                              WHERE CODE_TYPE = 'PATP')]
2025-02-28 14:48:00,529 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryWagonID] Prepared SQL: [SELECT DISTINCT WAGON_ID CODE, WAGON_ID NAME          FROM TB_RAIL_WAGON         ORDER BY WAGON_ID]
2025-02-28 14:48:00,531 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryColor] Prepared SQL: [SELECT '' AS CODE              , '' AS NAME              , '' AS VALUE1              , '' AS VALUE2              , FORE_COLOR              , BACK_COLOR           FROM TB_COLOR         ORDER BY ORDER_SEQ]
2025-02-28 14:48:00,532 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryCustomerTrfCodes] Prepared SQL: [SELECT DISTINCT CUSTOMER_CODE AS CODE,              CUSTOMER_CODE AS NAME         FROM TB_GNRL_CODE        WHERE GNRL_TYPE = 'UNT'          AND CUSTOMER_CODE IS NOT NULL     ORDER BY CODE]
2025-02-28 14:48:00,532 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-InquiryIMDGLabelCode] Prepared SQL: [SELECT CODE AS CODE,               CODE_DESC AS NAME,               IMDGS AS VALUE1,               IMDG_LABEL AS BYTE1          FROM TB_IMDGLABEL]
2025-02-28 14:48:00,533 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-cfsArea] Prepared SQL: [SELECT AREA as CODE, AREA as NAME          FROM TB_AREA         WHERE AREA_USE = 'C']
2025-02-28 14:48:00,535 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-scheduleParamValues] Prepared SQL: [SELECT PARAM_ID as CODE, PARAM_DESC as NAME          FROM TB_SCHPARAM_LIST         WHERE PROC_NAME =  @param0         ORDER BY PARAM_ID]
2025-02-28 14:48:00,535 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryImdgClass] Prepared SQL: [SELECT CLASS AS CODE             , CLASS AS NAME          FROM TB_IMDGCLASS         ORDER BY CLASS]
2025-02-28 14:48:00,535 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryUNNo] Prepared SQL: [SELECT DISTINCT UNNO AS CODE             , UNNO AS NAME          FROM TB_IMDGDATA         ORDER BY CODE]
2025-02-28 14:48:00,536 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryEquNo] Prepared SQL: [SELECT DISTINCT EQU_NO AS CODE,               EQU_NO AS NAME          FROM TB_EQU         ORDER BY CODE]
2025-02-28 14:48:00,536 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryContainerRuleCode] Prepared SQL: [SELECT DISTINCT RULE_CODE AS CODE,               RULE_DESC AS NAME,               MSG AS VALUE1          FROM TB_RULE_CODE         ORDER BY RULE_CODE]
2025-02-28 14:48:00,537 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquirySSRCodeUsedInPreAdvice] Prepared SQL: [SELECT GNRL_CODE AS CODE, GNRL_NM AS NAME          FROM TB_GNRL_CODE         WHERE GNRL_TYPE = 'SSR'           AND dbo.SF_CHECK_CODE_CONTAINED(CODE_USAGE, 'PA') = 'Y']
2025-02-28 14:48:00,538 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryStaffCodes] Prepared SQL: [SELECT DISTINCT STAFF_CD AS CODE,               NVL(ENG_NM, STAFF_CD) AS NAME          FROM TB_STAFF         ORDER BY CODE]
2025-02-28 14:48:00,538 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryCfsEquNos] Prepared SQL: [SELECT DISTINCT EQU_NO AS CODE,               EQU_NO AS NAME          FROM TB_EQU         WHERE EQU_TYPE1 IN ('FL', 'RS', 'TC', 'GC')         ORDER BY CODE]
2025-02-28 14:48:00,539 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryTmnlParameters] Prepared SQL: [SELECT FUNCTION_TYPE AS type,               FUNCTION_NAME AS typename,               PARAMETER_ID AS code,               PARAMETER_VALUE AS name          FROM TB_TMNL_PARAMETER         ORDER BY FUNCTION_TYPE, FUNCTION_NAME, PARAMETER_ID ASC]
2025-02-28 14:48:00,539 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-inquiryGangId] Prepared SQL: [SELECT GANG_ID CODE, '' NAME          FROM TB_GANG_ID         ORDER BY GANG_ID]
2025-02-28 14:48:00,540 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select-vvdAssignableAndStorage] Prepared SQL: [SELECT ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS CODE,               ISNULL(VSL_CD, '') + '-' + ISNULL(CALL_YEAR, '') + '-' + ISNULL(CALL_SEQ, '') AS NAME,               STORAGE_TYPE AS VALUE1,               CASE ATD WHEN NULL THEN 'N' ELSE 'Y' END AS VALUE2,               NULL AS FORE_COLOR, NULL AS BACK_COLOR          FROM TB_BERTHPLAN         WHERE ISNULL(STORAGE_TYPE, 'NULL') IN ('NULL', 'X', 'S')           AND ATD IS NULL           AND ISNULL(STATUS, 'NULL') <> 'C'         ORDER BY CODE]
2025-02-28 14:48:00,540 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryPileMixtureRule] Prepared SQL: [SELECT DISTINCT RULE_CD Code, RULE_DESC Name          FROM TB_PILEMIX_RULE_MASTER         ORDER BY RULE_CD]
2025-02-28 14:48:00,542 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryProductivitySettingScatteringVVD] Prepared SQL: [SELECT DISTINCT B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ CODE             , B.VSL_CD + '-' + B.CALL_YEAR + '-' + B.CALL_SEQ NAME             , B.VSL_CD             , B.CALL_YEAR             , B.CALL_SEQ          FROM TB_VSL V             , TB_BERTHPLAN B         WHERE V.VSL_CD = B.VSL_CD           AND (B.STORAGE_TYPE <> 'S' OR B.STORAGE_TYPE IS NULL)           AND B.OUT_LANE =  @param0          ORDER BY B.VSL_CD, B.CALL_YEAR DESC, B.CALL_SEQ DESC]
2025-02-28 14:48:00,542 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryPileMixtureRuleSet] Prepared SQL: [SELECT DISTINCT RULESET_CD CODE, RULESET_DESC NAME          FROM TB_PILEMIX_RULESET_MASTER         ORDER BY RULESET_CD]
2025-02-28 14:48:00,542 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryBayRowMixtureRule] Prepared SQL: [SELECT DISTINCT RULE_CD CODE, RULE_DESC NAME          FROM TB_BAYROWMIX_RULE_MASTER         ORDER BY RULE_CD]
2025-02-28 14:48:00,543 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryEvaluationRule] Prepared SQL: [SELECT DISTINCT RULE_CD CODE, RULE_DESC NAME          FROM TB_POSEVA_MASTER         WHERE JOB_TYPE =  @param0          ORDER BY RULE_CD]
2025-02-28 14:48:00,543 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryNewPositionRule] Prepared SQL: [SELECT DISTINCT RULE_CD CODE, RULE_DESC NAME          FROM TB_POSRULE_RENEWED         ORDER BY RULE_CD]
2025-02-28 14:48:00,544 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryIxCdIXOnly] Prepared SQL: [SELECT CODE AS CODE, CODE_DESC AS NAME          FROM TB_CODE_MASTER         WHERE CODE_TYPE = 'IXCD'           AND CODE IN ('I', 'X')]
2025-02-28 14:48:00,544 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryJobmodeToCompare] Prepared SQL: [SELECT CODE AS CODE, CODE_DESC AS NAME          FROM TB_CODE_MASTER         WHERE CODE_TYPE = 'BLMD'           AND CODE = 'GAN']
2025-02-28 14:48:00,545 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_inquiryProformaScheduleTemplateID] Prepared SQL: [SELECT DISTINCT TEMPLATE_ID AS CODE, TEMPLATE_ID AS NAME          FROM TB_PROFORMA_SCH      ORDER BY TEMPLATE_ID DESC]
2025-02-28 14:48:00,546 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Code.Service.Map.CodeGeneralMap.select_InquiryBlockCodes] Prepared SQL: [SELECT BLOCK as code             , BLOCK as name             , FORE_COLOR as value1             , BACK_COLOR as value2             , FORE_COLOR as fore_color             , BACK_COLOR as back_color          FROM TB_BLOCK         ORDER BY CODE]
2025-02-28 14:48:00,550 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.select-InquiryUseDBFilter] Prepared SQL: [SELECT /* Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.select-InquiryUseDBFilter */        ISNULL(USE_DB_FILTER, 'N')        FROM  TB_TMNL_CFG]
2025-02-28 14:48:00,551 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.select-InquiryFilterNameValid] Prepared SQL: [SELECT        COUNT_BIG(PGM_CODE)        FROM        TB_FILTER_TEMPLATE        WHERE 1=1        AND PGM_CODE =  @param0         AND MENU =  @param1         AND CAST(GRID_IDX AS NVARCHAR(MAX)) =  @param2         AND FILTER_NAME =  @param3         AND CAST(SEQ AS NVARCHAR(MAX)) =  @param4         AND (FILTER_TYPE = 'C' OR (USER_ID =  @param5  AND FILTER_TYPE = 'P'))]
2025-02-28 14:48:00,552 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.select-inquiryFilterStoredItemList] Prepared SQL: [SELECT PGM_CODE, MENU        ,CAST(GRID_IDX AS NVARCHAR(MAX)) AS GRID_IDX        ,FILTER_NAME        ,CAST(SEQ AS NVARCHAR(MAX)) AS SEQ        ,FIELD, OPERATOR, VALUE, USER_ID, STAFF_CD        ,CAST(UPDATE_TIME AS NVARCHAR(MAX)) AS UPDATE_TIME        ,FILTER_TYPE        FROM        TB_FILTER_TEMPLATE        WHERE 1=1        AND PGM_CODE =  @param0         AND MENU =  @param1         AND GRID_IDX =  @param2         AND (USER_ID =  @param3  OR FILTER_TYPE = 'C')]
2025-02-28 14:48:00,554 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.insert-filterStoredItem] Prepared SQL: [INSERT        INTO        TB_FILTER_TEMPLATE        (        PGM_CODE        , MENU        , GRID_IDX        , FILTER_NAME        , SEQ        , FIELD        , OPERATOR        , VALUE        , USER_ID        , STAFF_CD        , UPDATE_TIME        , FILTER_TYPE        )        VALUES        (  @param0         , @param1         , @param2         , @param3         , @param4         , @param5         , @param6         , @param7         , @param8         , @param9         ,SYSDATETIME()        , @param10         )]
2025-02-28 14:48:00,555 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.update-filterStoredItem] Prepared SQL: [UPDATE TB_FILTER_TEMPLATE SET        STAFF_CD =  @param0         ,UPDATE_TIME = SYSDATETIME()             WHERE 1=1]
2025-02-28 14:48:00,556 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.FilterStoreGeneralMap.delete-filterStoredItem] Prepared SQL: [DELETE TB_FILTER_TEMPLATE     WHERE 1=1     AND PGM_CODE =  @param0      AND MENU =  @param1      AND GRID_IDX =  @param2      AND USER_ID =  @param3      AND FILTER_NAME =  @param4]
2025-02-28 14:48:00,564 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.select-InquiryDummayColSetting] Prepared SQL: [SELECT        M.COLUMN_KEY        ,M.COLUMN_CAPTION        ,M.CODE_TYPE        ,M.CELL_TYPE        ,M.CELL_TYPE_ID        ,M.VISIBLE        ,S.BACKCOLOR        ,S.FORECOLOR        ,S.COLOR_RULE_TYPE        ,S.CELL_INPUT_TYPE        ,S.CELL_DISPLAY_TYPE        ,S.VALUE_DISPLAY_TYPE        ,S.EDITABLE        FROM TB_DUMMY_FIELD M, TB_DUMMYCOL_SCHEMA S        WHERE 1=1        AND M.COLUMN_TYPE = S.COLUMN_TYPE]
2025-02-28 14:48:00,568 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.select-InquiryUseDBColSetting] Prepared SQL: [SELECT /* Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.select-InquiryUseDBFilter */        ISNULL(USE_DB_COLUMN, 'N')        FROM  TB_TMNL_CFG]
2025-02-28 14:48:00,569 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.select-inquiryColSettingStoredItemNameList] Prepared SQL: [SELECT PGM_CODE,TEMPLATE_NAME, GRID_IDX, MENU, TEMPLATE_TYPE, ROW_HEADER_TYPE,         FROZEN_COL_COUNT,DEFAULT_CHK, DISPLAY_COLS, USER_ID, STAFF_CD,         CAST(UPDATE_TIME AS NVARCHAR(MAX)) AS UPDATE_TIME      FROM TB_COLUMN_TEMPLATE          WHERE 1=1          AND PGM_CODE      =  @param0           AND MENU          =  @param1           AND GRID_IDX      =  @param2           AND TEMPLATE_NAME =  @param3]
2025-02-28 14:48:00,570 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.insert-ColSettingStoredItem] Prepared SQL: [INSERT INTO TB_COLUMN_TEMPLATE(        PGM_CODE, MENU, GRID_IDX, TEMPLATE_NAME, DISPLAY_COLS,         DEFAULT_CHK, FROZEN_COL_COUNT, SHOW_ROW_HEADER,         ROW_HEADER_TYPE, USER_ID, STAFF_CD, UPDATE_TIME, TEMPLATE_TYPE        ) VALUES  (          @param0 ,  @param1 ,  @param2 ,  @param3 ,  @param4 ,  @param5 ,          @param6 ,  @param7 ,  @param8 ,  @param9 , @param9 ,SYSDATETIME(),           @param10         )]
2025-02-28 14:48:00,571 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-ResetColSettingStoredItemWithU] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE         SET DEFAULT_CHK = 'N'        WHERE 1=1          AND PGM_CODE  =  @param0           AND MENU      =  @param1           AND GRID_IDX  =  @param2           AND USER_ID   =  @param3           AND TEMPLATE_TYPE = 'U']
2025-02-28 14:48:00,571 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-SetColSettingStoredItemWithU] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE         SET DEFAULT_CHK = 'Y'        WHERE 1=1           AND PGM_CODE      =  @param0           AND MENU          =  @param1           AND GRID_IDX      =  @param2           AND TEMPLATE_NAME =  @param3]
2025-02-28 14:48:00,572 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-SetColSettingStoredItemWithG] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE         SET DEFAULT_CHK = 'Y'        WHERE 1=1          AND PGM_CODE      =  @param0           AND MENU          =  @param1           AND GRID_IDX      =  @param2           AND TEMPLATE_NAME =  @param3]
2025-02-28 14:48:00,573 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-ResetColSettingStoredItemWithA] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE         SET DEFAULT_CHK = 'N'        WHERE 1=1          AND PGM_CODE =  @param0           AND MENU     =  @param1           AND GRID_IDX =  @param2            AND             ((TEMPLATE_TYPE = 'U'AND USER_ID =  @param3 )             OR (TEMPLATE_TYPE = 'G'                  AND USER_ID IN                 (SELECT STAFF_CD FROM TB_STAFF                   WHERE 1=1                     AND                     USER_GROUP =  @param4 ))             OR (TEMPLATE_TYPE = 'A'))]
2025-02-28 14:48:00,574 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-SetColSettingStoredItemWithA] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE        SET DEFAULT_CHK = 'Y'        WHERE 1=1          AND PGM_CODE      =  @param0           AND MENU          =  @param1           AND GRID_IDX      =  @param2           AND TEMPLATE_NAME =  @param3]
2025-02-28 14:48:00,574 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.update-SetColSettingStoredItem] Prepared SQL: [UPDATE TB_COLUMN_TEMPLATE         SET UPDATE_TIME     = SYSDATETIME()        , DISPLAY_COLS      =  @param0         , FROZEN_COL_COUNT  =  @param1         , SHOW_ROW_HEADER   =  @param2         , ROW_HEADER_TYPE   =  @param3         , STAFF_CD =  @param4         WHERE 1=1          AND PGM_CODE      =  @param5           AND MENU          =  @param6           AND GRID_IDX      =  @param7           AND TEMPLATE_NAME =  @param8]
2025-02-28 14:48:00,575 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.ColSettingStoreGeneralMap.delete-ColSettingStoredItem] Prepared SQL: [DELETE TB_COLUMN_TEMPLATE        WHERE 1=1          AND PGM_CODE      =  @param0           AND MENU          =  @param1           AND GRID_IDX      =  @param2           AND TEMPLATE_NAME =  @param3]
2025-02-28 14:48:00,584 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.MainMap.update-remarkWeightInfo] Prepared SQL: [UPDATE TMT_WEIGHTBRIDGE               SET RMK =  @param0                WHERE                  VSL_CALL_ID  =  @param1                    AND LORRY_NO =  @param2                    AND (        (BL_NO =  @param3  AND SDO_NO =  @param4 )         OR         (SHIPG_NOTE_NO =  @param5  AND GR_NO =  @param6 )       );]
2025-02-28 14:48:00,585 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.MainMap.update-printCount] Prepared SQL: [UPDATE TMT_WEIGHTBRIDGE     SET PRN_CNT =  ISNULL(PRN_CNT, 0)  + 1     WHERE 1= 1     AND TRANSACTION_NO =  @param0]
2025-02-28 14:48:00,585 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.MainMap.update-statusCanCelJobWeightBridge] Prepared SQL: [UPDATE TMT_WEIGHTBRIDGE     SET STATUS   =  @param0      WHERE     TRANSACTION_NO =  @param1]
2025-02-28 14:48:00,592 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.WeightBridgeMap.select-transactionNo] Prepared SQL: [SELECT     FORMAT(GETDATE(),'yyyyMMdd') + RIGHT(REPLICATE('0',5) + FORMAT(CONVERT(BIGINT, ISNULL(MAX(SUBSTRING(TRANSACTION_NO,9,5)),0)) + 1,''),5) TRANSACTION_NO     FROM TMT_WEIGHTBRIDGE     WHERE TRANSACTION_NO LIKE FORMAT(GETDATE(),'yyyyMMdd') + '%']
2025-02-28 14:48:00,594 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.WeightBridgeMap.insert-weightBridge] Prepared SQL: [INSERT INTO TMT_WEIGHTBRIDGE     (TRANSACTION_NO     ,GATE_TICKET_NO     ,TRANSACTION_DT     ,VSL_CALL_ID     ,VSL_CD     ,CALL_YEAR     ,CALL_SEQ     ,MF_DOC_ID     ,SHIPG_NOTE_NO     ,GR_NO     ,BL_NO     ,DO_NO     ,SDO_NO     ,UNIT_NO     ,DELV_TP_CD     ,FWRD     ,CNSNE     ,SHPR     ,GP_NO     ,TSPT_COMP     ,LORRY_NO     ,DRIVER_ID     ,CHASSIS_NO     ,TRK_MODE     ,FIRST_WGT     ,SECOND_WGT     ,BAG_WGT     ,PKG_QTY     ,CG_VOL     ,TRK_GRS_WGT     ,TRK_TRE_WGT     ,TRK_NET_WGT     ,GATEIN_DT     ,GATEIN_CD     ,GATEOUT_DT     ,GATEOUT_CD     ,TO_LOCATION     ,PRN_CNT     ,RMK     ,RHDL_MODE     ,STAFF_CD     ,UPDATE_TIME     ,FIRST_WGT_DT     ,SECOND_WGT_DT     ,STATUS)     VALUES     ( @param0      , @param1      , @param2      , @param3      , @param4      , @param5      , @param6      , @param7      , @param8      , @param9      , @param10      , @param11      , @param12      , @param13      , @param14      , @param15      , @param16      , @param17      , @param18      , @param19      , @param20      , @param21      , @param22      , @param23      , @param24      , @param25      , @param26      , @param27      , @param28      , @param29      , @param30      , @param31      , @param32      , @param33      , @param34      , @param35      , @param36      , @param37      , @param38      , @param39      , @param40      , @param41      , @param42      , @param43      , @param44 )]
2025-02-28 14:48:00,595 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.WeightBridge.Map.WeightBridgeMap.update-weightBridge] Prepared SQL: [UPDATE TMT_WEIGHTBRIDGE     SET RMK             =  @param0 ,     SECOND_WGT      =  @param1 ,     SECOND_WGT_DT   =  @param2 ,     UPDATE_TIME     =  @param3 ,     STAFF_CD        =  @param4 ,     TRK_GRS_WGT     =  @param5 ,     TRK_TRE_WGT     =  @param6 ,     TRK_NET_WGT     =  @param7 ,     DELV_TP_CD      =  @param8 ,     CNSNE           =  @param9 ,     SHPR            =  @param10 ,     STATUS   =  @param11      WHERE     TRANSACTION_NO =  @param12]
2025-02-28 14:48:00,601 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalMap.select-terminal] Prepared SQL: [SELECT T.TMNL_CD, T.TMNL_NM, T.PORT, T.MAXTEU_TRUCK, T.LENGTH, T.HEIGHT,           T.EXT_X, T.EXT_Y, C.UN_SEGREGATION_CHK, C.EM_CHR, ISNULL(C.STRG_VSL,'STRG') AS STRG_VSL,           C.LAYOUT_AXIS, C.BERTH_DIR, C.QCCOVERAGE_BY_BITT, C.USE_YSLOT_USAGE         FROM TB_TMNL T, TB_TMNL_CFG C        WHERE T.TMNL_CD = C.TMNL_CD]
2025-02-28 14:48:00,602 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalMap.update-terminal] Prepared SQL: [UPDATE  /* Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalMap.update-terminal */              TB_TMNL          SET              TMNL_CD =  @param0 ,              TMNL_NM =  @param1 ,              PORT =  @param2 ,              MAXTEU_TRUCK =  @param3 ,              LENGTH =  @param4 ,              HEIGHT =  @param5 ,              EXT_X =  @param6 ,              EXT_Y =  @param7 ,              STAFF_CD =  @param8 ,              UPDATE_TIME = SYSDATETIME()]
2025-02-28 14:48:00,603 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalMap.update-terminalcfg] Prepared SQL: [UPDATE              TB_TMNL_CFG          SET              UN_SEGREGATION_CHK =  @param0 ,              STAFF_CD =  @param1 ,              UPDATE_TIME = SYSDATETIME()]
2025-02-28 14:48:00,609 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalCapacityMap.insert-terminalCapacity] Prepared SQL: [INSERT INTO TB_TMNL_CAP        (TMNL_CD, WK_IM_F, WK_EX_F, WK_F, TL_IM_F,        TL_EX_F, TL_F, WK_VP_E, WK_EY_E, WK_E,        TL_VP_E, TL_EY_E, TL_E, TL_ST_F, ST_IM_F,        ST_EX_F, ST_RF_F, ST_SF_F, ST_US_F, ST_IP_F,        TL_ST_E, ST_CL_E, ST_WC_E, ST_RP_E, ST_WR_E,        ST_PT_E, ST_AV_E, WK_PG_F, WK_PG_E, REMARK,        STAFF_CD, UPDATE_TIME        ) VALUES (         @param0 ,  @param1 ,  @param2 ,  @param3 ,  @param4 ,         @param5 ,  @param6 ,  @param7 ,  @param8 ,  @param9 ,         @param10 ,  @param11 ,  @param12 ,  @param13 ,  @param14 ,         @param15 ,  @param16 ,  @param17 ,  @param18 ,  @param19 ,         @param20 ,  @param21 ,  @param22 ,  @param23 ,  @param24 ,         @param25 ,  @param26 ,  @param27 ,  @param28 ,  @param29 ,         @param30 , SYSDATETIME())]
2025-02-28 14:48:00,610 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalCapacityMap.update-terminalCapacity] Prepared SQL: [UPDATE  /* Tsb.Catos.Cm.Core.YardDefine.Service.Map.TerminalCapacityMap.update-terminalCapacity */        TB_TMNL_CAP        SET        TMNL_CD =  @param0 ,        WK_IM_F =  @param1 ,        WK_EX_F =  @param2 ,        WK_F =  @param3 ,        TL_IM_F =  @param4 ,        TL_EX_F=  @param5 ,        TL_F =  @param6 ,        WK_VP_E =  @param7 ,        WK_EY_E =  @param8 ,        WK_E =  @param9 ,        TL_VP_E =  @param10 ,        TL_EY_E =  @param11 ,        TL_E =  @param12 ,        TL_ST_F =  @param13 ,        ST_IM_F =  @param14 ,        ST_EX_F =  @param15 ,        ST_RF_F =  @param16 ,        ST_SF_F =  @param17 ,        ST_US_F =  @param18 ,        ST_IP_F =  @param19 ,        TL_ST_E =  @param20 ,        ST_CL_E =  @param21 ,        ST_WC_E =  @param22 ,        ST_RP_E =  @param23 ,        ST_WR_E =  @param24 ,        ST_PT_E =  @param25 ,        ST_AV_E =  @param26 ,        WK_PG_F =  @param27 ,        WK_PG_E =  @param28 ,        REMARK =  @param29 ,        STAFF_CD =  @param30 ,        UPDATE_TIME = SYSDATETIME()        WHERE TMNL_CD =  @param0]
2025-02-28 14:48:00,624 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.TPrintInfoStoreGeneralMap.select-ExcelImport] Prepared SQL: [SELECT            PGM_CODE            ,MENU            ,GRID_NAME            ,TEMPLATE_NAME            ,COLUMN_NAME            ,GRID_COLUMN_KEY            ,COLUMN_SEQ            ,STAFF_CD            ,HEADER_ROW            ,TO_CHAR(UPDATE_TIME) as UPDATE_TIME            FROM  TB_IMPORTFILE_TEMPLATE            WHERE 1=1            AND PGM_CODE =  @param0             AND MENU     =  @param1             AND GRID_NAME =  @param2]
2025-02-28 14:48:00,625 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.TPrintInfoStoreGeneralMap.insert-ExcelImportItem] Prepared SQL: [INSERT INTO TB_IMPORTFILE_TEMPLATE(            PGM_CODE, MENU, TEMPLATE_NAME, GRID_COLUMN_KEY, COLUMN_NAME,            COLUMN_SEQ, GRID_NAME, STAFF_CD, HEADER_ROW, UPDATE_TIME            ) VALUES  (             @param0 ,  @param1 ,  @param2 ,  @param3 ,  @param4 ,             @param5 ,  @param6 ,  @param7 ,  @param8 , SYSDATE            )]
2025-02-28 14:48:00,626 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.TPrintInfoStoreGeneralMap.update-ExcelImportItem] Prepared SQL: [UPDATE TB_IMPORTFILE_TEMPLATE            SET UPDATE_TIME      = SYSDATE            , COLUMN_SEQ         =  @param0             , COLUMN_NAME        =  @param1             , HEADER_ROW         =  @param2             WHERE 1=1            AND PGM_CODE         =  @param3             AND MENU             =  @param4             AND TEMPLATE_NAME    =  @param5             AND GRID_COLUMN_KEY  =  @param6             AND GRID_NAME        =  @param7]
2025-02-28 14:48:00,627 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Grid.Service.Map.TPrintInfoStoreGeneralMap.delete-ExcelImportItem] Prepared SQL: [Delete TB_IMPORTFILE_TEMPLATE            WHERE 1=1              AND PGM_CODE        =  @param0               AND MENU            =  @param1               AND TEMPLATE_NAME   =  @param2               AND COLUMN_SEQ      =  @param3               AND GRID_NAME       =  @param4               AND GRID_COLUMN_KEY =  @param5               AND COLUMN_NAME     =  @param6]
2025-02-28 14:48:00,630 [Module.exe] DEBUG - Statement Id: [Tsb.Product.WB.Service.Popup.Map.TruckListPopupMap.select-LorryList] Prepared SQL: [/* Formatted on 7/23/2024 4:29:03 PM (QP5 v5.252.13127.32867) */      WITH TRANSPORT_INFO           AS (SELECT *                 FROM TMT_ASSIGN_TRANSPORT                WHERE LORRY_NO LIKE '%' +  @param0  + '%'),           LORRY_PTNR_INFO           AS (SELECT PTNR_CD, LORRY_NO                 FROM TMT_TRUCK_MST                      JOIN TMT_PTNR PTNR ON TMT_TRUCK_MST.PTNR_CD = PTNR.PTNR_CODE                WHERE PTNR.PTNR_TYPE = 'TRK')      SELECT dbo.F_GET_PTNR_SNM (BL.CNSNE) AS BL_CNSNE_NM,             dbo.F_GET_PTNR_SNM (BL.SHPR) AS BL_SHIPPER_NM,             dbo.F_GET_PTNR_SNM (SN.CNSNE) AS SN_CNSNE_NM,             dbo.F_GET_PTNR_SNM (SN.SHPR) AS SN_SHIPPER_NM,             dbo.F_GET_PTNR_SNM (LORRY_PTNR_INFO.PTNR_CD) AS TRST_NM,             LORRY_PTNR_INFO.PTNR_CD AS TSPT_COMP,             BL.CNSNE AS BL_CNSNE_CD,             BL.SHPR AS BL_SHIPPER_CD,             SN.CNSNE AS SN_CNSNE_CD,             SN.SHPR AS SN_SHIPPER_CD,             TRANSPORT_INFO.VSL_CALL_ID,             TRANSPORT_INFO.VSL_CD,             TRANSPORT_INFO.CALL_YEAR,             TRANSPORT_INFO.CALL_SEQ,             TRANSPORT_INFO.LORRY_NO,             TRANSPORT_INFO.DRIVER_ID,             TRANSPORT_INFO.CHASSIS_NO,             TRANSPORT_INFO.BL_NO,             TRANSPORT_INFO.DO_NO,             TRANSPORT_INFO.SDO_NO,             TRANSPORT_INFO.SHIPG_NOTE_NO,             TRANSPORT_INFO.GR_NO,             TRANSPORT_INFO.TRUCK_MODE,             TRANSPORT_INFO.QR_CD,                           CASE                WHEN BL.BL_NO IS NOT NULL THEN BL.MF_DOC_ID                WHEN SN.SHIPG_NOTE_NO IS NOT NULL THEN SN.MF_DOC_ID             END                AS MF_DOC_ID,             GT.GATE_IN_DT,             GT.GATE_CD,             GT.GATE_OUT_DT,             GT.GATE_CD_OUT,             GT.CG_NO,             GT.GATE_TXN_NO,             GT.PKG_QTY,             GT.CG_VOL,             WB.FIRST_WGT,             WB.SECOND_WGT,             WB.TRK_NET_WGT,             WB.RMK,             WB.TRANSACTION_NO,             WB.TRANSACTION_DT,       WB.STATUS,             CMDT.CMDT_DESC,             CASE                WHEN BL.CATG_CD = 'I' OR SN.CATG_CD = 'I' THEN 'Import'                WHEN BL.CATG_CD = 'E' OR SN.CATG_CD = 'E' THEN 'Export'             END                AS CATEGORY,             CASE                WHEN WB.DELV_TP_CD IS NOT NULL THEN WB.DELV_TP_CD                WHEN BL.BL_NO IS NOT NULL THEN BL.DELV_TP_CD                WHEN SN.SHIPG_NOTE_NO IS NOT NULL THEN SN.DELV_TP_CD             END                AS DELV_TP_CD,             CASE                WHEN BL.BL_NO IS NOT NULL THEN BL.BL_NO                WHEN SN.SHIPG_NOTE_NO IS NOT NULL THEN SN.SHIPG_NOTE_NO             END                AS BL_SN,             CASE                WHEN TRANSPORT_INFO.SDO_NO IS NOT NULL THEN TRANSPORT_INFO.SDO_NO                WHEN TRANSPORT_INFO.GR_NO IS NOT NULL THEN TRANSPORT_INFO.GR_NO             END                AS SDO_GR,             CASE                WHEN BL.BL_NO IS NOT NULL AND TRANSPORT_INFO.SDO_NO IS NOT NULL                THEN                   dbo.F_GET_PTNR_SNM (BL.CNSNE)                WHEN     SN.SHIPG_NOTE_NO IS NOT NULL                     AND TRANSPORT_INFO.GR_NO IS NOT NULL                THEN                   dbo.F_GET_PTNR_SNM (SN.SHPR)             END                AS CNSN_SHPR,             CASE                WHEN WB.PRN_CNT IS NULL OR WB.PRN_CNT = 0 THEN 'No'                ELSE 'Yes'             END                AS PRINT_CIR        FROM TRANSPORT_INFO             LEFT JOIN TMT_BL                                                AS BL                ON     TRANSPORT_INFO.BL_NO = BL.BL_NO                   AND TRANSPORT_INFO.VSL_CALL_ID = BL.VSL_CALL_ID             LEFT JOIN TMT_SHIPG_NOTE                                        AS SN                ON     TRANSPORT_INFO.SHIPG_NOTE_NO = SN.SHIPG_NOTE_NO                   AND TRANSPORT_INFO.VSL_CALL_ID = SN.VSL_CALL_ID             LEFT JOIN LORRY_PTNR_INFO                ON     LORRY_PTNR_INFO.LORRY_NO = TRANSPORT_INFO.LORRY_NO                          AND (           (TRANSPORT_INFO.TRANSPORT = LORRY_PTNR_INFO.PTNR_CD )           OR          (TRANSPORT_INFO.TRANSPORT like ''+ LORRY_PTNR_INFO.PTNR_CD +'[,]%' )           OR          (TRANSPORT_INFO.TRANSPORT like  +'%[,]'+ LORRY_PTNR_INFO.PTNR_CD +'[,]%'  )           OR            (TRANSPORT_INFO.TRANSPORT like  + '%[,]'+ LORRY_PTNR_INFO.PTNR_CD  +'' )            )                    LEFT JOIN TMT_CMDT CMDT                ON CMDT.CMDT_CD = BL.CMDT_CD AND CMDT.CMDT_GRP_CD = BL.CMDT_GRP_CD             LEFT OUTER JOIN TMT_CG_ARRV_DELV GT                ON     TRANSPORT_INFO.VSL_CALL_ID = GT.VSL_CALL_ID                   AND TRANSPORT_INFO.LORRY_NO = GT.LORRY_NO                   AND (   (    TRANSPORT_INFO.SDO_NO IS NOT NULL                            AND TRANSPORT_INFO.SDO_NO = GT.SDO_NO                            AND TRANSPORT_INFO.BL_NO = GT.CG_NO)                        OR (    TRANSPORT_INFO.GR_NO IS NOT NULL                            AND TRANSPORT_INFO.GR_NO = GT.GR_NO))             LEFT JOIN TMT_WEIGHTBRIDGE                                      AS WB                ON     (   (  COALESCE (TRANSPORT_INFO.BL_NO, '') != ''                              AND TRANSPORT_INFO.BL_NO = WB.BL_NO                               AND COALESCE (TRANSPORT_INFO.SDO_NO, '') = COALESCE (WB.SDO_NO, ''))                        OR (  COALESCE (TRANSPORT_INFO.SHIPG_NOTE_NO, '') != ''                              AND TRANSPORT_INFO.SHIPG_NOTE_NO = WB.SHIPG_NOTE_NO                               AND COALESCE (TRANSPORT_INFO.GR_NO, '') = COALESCE (WB.GR_NO, '')))                   AND TRANSPORT_INFO.LORRY_NO = WB.LORRY_NO                   AND TRANSPORT_INFO.VSL_CALL_ID = WB.VSL_CALL_ID                   AND COALESCE (WB.GATE_TICKET_NO, '') =  COALESCE (GT.GATE_TXN_NO, '')       AND WB.SECOND_WGT IS NULL                  AND COALESCE (WB.STATUS, 'N')  NOT IN ('C', 'Y')       WHERE     1 = 1]
2025-02-28 14:48:00,644 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo] PreparedStatement : [SELECT  /* Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo*/     USER_ID as STAFF_CD,     '' as USE_APP,     '' as DEPT_CD,     GRD_CD as USER_GROUP,     TMNL_CODE as TMNL_ID,     PASSWORD as PASSWORD,     ENG_NM as ENG_NM ,     PWD_DATE as PWDCHANGE_TIME,     SYSDATETIME() AS TODAY,     PWD_INTERVAL as PWD_INTERVAL ,     '0' as RETRY,     'N' as  ADMIN,     USER_LEVEL as USER_LEVEL ,     'N' as  EXPIRE   ,      DATEDIFF("MM", LAST_LOGIN, SYSDATETIME()) AS DAYS_AFTER_LAST_LOGIN,     LCL_NM as LCL_NM,     LAST_LOGIN as LASTLOGIN_TIME     FROM    TMT_USER_INFO     WHERE   1=1     AND USER_ID =  @param0]
2025-02-28 14:48:00,649 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo] Parameters: [@param0=[UserID,HUYADMIN]]
2025-02-28 14:48:00,650 [Module.exe] DEBUG - Statement Id: [Tsb.Catos.Cm.Core.Security.Service.Map.CTSecurityMap.select-InquiryUserInfo] Types: [@param0=[String, System.String]]
2025-02-28 14:48:01,409 [Module.exe] DEBUG - Open Connection "62331491" to "Microsoft SQL Server, provider V2.0.0.0 in framework .NET V2.0".
2025-02-28 14:48:01,629 [Module.exe] DEBUG - Close Connection "62331491" to "Microsoft SQL Server, provider V2.0.0.0 in framework .NET V2.0".
2025-02-28 14:48:01,820 [Module.exe] DEBUG - Create MenuXmlUtil menuXmlFileWithPath E:\Levi\CSharp\MOST_MMC_WB-main\Tsb-Product-WB\Tsb.Product.WB.Client\bin\Debug\Environment\ProductWB\MenuItem.xml
2025-02-28 14:48:02,242 [Module.exe] ERROR - [FT.Win] Value cannot be null.
Parameter name: source /+/    at System.Linq.Enumerable.Where[TSource](IEnumerable`1 source, Func`2 predicate)
   at Tsb.Fontos.Win.Menu.Authority.MenuAuthorityUtil.IsMenuAuthority(ITMenuProperty menuProperty) in E:\Levi\CSharp\FONTOS_Installation\FONTOS\Tsb-Fontos-Framework\MAIN\2.0-Std-Main\Tsb-Fontos-Framework\Tsb.Fontos.Win\Menu\Authority\MenuAuthorityUtil.cs:line 126
2025-02-28 14:48:02,262 [Module.exe] ERROR - [FT.Win] Value cannot be null.
Parameter name: source /+/    at System.Linq.Enumerable.Where[TSource](IEnumerable`1 source, Func`2 predicate)
   at Tsb.Fontos.Win.Menu.Authority.MenuAuthorityUtil.IsMenuAuthority(ITMenuProperty menuProperty) in E:\Levi\CSharp\FONTOS_Installation\FONTOS\Tsb-Fontos-Framework\MAIN\2.0-Std-Main\Tsb-Fontos-Framework\Tsb.Fontos.Win\Menu\Authority\MenuAuthorityUtil.cs:line 126
2025-02-28 14:48:05,353 [Module.exe] INFO  - [FT.Core] The log deletion function is disabled.
